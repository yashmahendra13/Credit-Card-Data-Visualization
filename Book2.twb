<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1103.1137                               -->
<workbook original-version='10.4' source-build='10.4.1 (10400.17.1103.1137)' source-platform='win' version='10.4' xml:base='https://us-east-1.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Book2' path='/t/creditcardvis/workbooks' revision='1.0' site='creditcardvis' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AER_credit_card_data' inline='true' name='federated.1i62fnb0si72f7156akmq1r1bzbb' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AER_credit_card_data' name='textscan.1p77d850rygahb12q0f1313opp7n'>
            <connection class='textscan' directory='C:/Users/YASH/Desktop/Semester 1/MIS 636/Final Project/AER Credit Card Data' filename='AER_credit_card_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1p77d850rygahb12q0f1313opp7n' name='AER_credit_card_data.csv' table='[AER_credit_card_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='card' ordinal='0' />
            <column datatype='integer' name='reports' ordinal='1' />
            <column datatype='real' name='age' ordinal='2' />
            <column datatype='real' name='income' ordinal='3' />
            <column datatype='real' name='share' ordinal='4' />
            <column datatype='real' name='expenditure' ordinal='5' />
            <column datatype='string' name='owner' ordinal='6' />
            <column datatype='string' name='selfemp' ordinal='7' />
            <column datatype='integer' name='dependents' ordinal='8' />
            <column datatype='integer' name='months' ordinal='9' />
            <column datatype='integer' name='majorcards' ordinal='10' />
            <column datatype='integer' name='active' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>card</remote-name>
            <remote-type>129</remote-type>
            <local-name>[card]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>card</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reports</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reports]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>reports</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>share</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>expenditure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[expenditure]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>expenditure</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>selfemp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[selfemp]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>selfemp</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dependents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dependents]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>dependents</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>months</remote-name>
            <remote-type>20</remote-type>
            <local-name>[months]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>months</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>majorcards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[majorcards]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>majorcards</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AER_credit_card_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Active (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[active]' peg='0' size='4.21' />
      </column>
      <column aggregation='None' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[age]' peg='0' size='3.23' />
      </column>
      <column aggregation='None' datatype='integer' name='[Dependents (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[dependents]' peg='0' size='1.117' />
      </column>
      <column aggregation='None' datatype='integer' name='[Income (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[income]' peg='0' size='0.51' />
      </column>
      <column aggregation='None' datatype='integer' name='[Majorcards (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[majorcards]' peg='0' size='0.303' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Active' datatype='integer' name='[active]' role='measure' type='quantitative' />
      <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
      <column caption='Card' datatype='string' name='[card]' role='dimension' type='nominal' />
      <column caption='Dependents' datatype='integer' name='[dependents]' role='measure' type='quantitative' />
      <column caption='Expenditure' datatype='real' name='[expenditure]' role='measure' type='quantitative' />
      <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
      <column caption='Majorcards' datatype='integer' name='[majorcards]' role='measure' type='quantitative' />
      <column caption='Months' datatype='integer' name='[months]' role='measure' type='quantitative' />
      <column caption='Owner' datatype='string' name='[owner]' role='dimension' type='nominal' />
      <column caption='Reports' datatype='integer' name='[reports]' role='measure' type='quantitative' />
      <column caption='Selfemp' datatype='string' name='[selfemp]' role='dimension' type='nominal' />
      <column caption='Share' datatype='real' name='[share]' role='measure' type='quantitative' />
      <column-instance column='[income]' derivation='Count' name='[cnt:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income]' derivation='CountD' name='[ctd:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age]' derivation='None' name='[none:age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[card]' derivation='None' name='[none:card:nk]' pivot='key' type='nominal' />
      <column-instance column='[income]' derivation='None' name='[none:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[active]' derivation='Sum' name='[sum:active:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age]' derivation='Sum' name='[sum:age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dependents]' derivation='Sum' name='[sum:dependents:qk]' pivot='key' type='quantitative' />
      <column-instance column='[expenditure]' derivation='Sum' name='[sum:expenditure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[majorcards]' derivation='Sum' name='[sum:majorcards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[months]' derivation='Sum' name='[sum:months:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reports]' derivation='Sum' name='[sum:reports:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.432642' group-percentage='0.0569948' measure-ordering='alphabetic' measure-percentage='0.453368' parameter-percentage='0.0569948' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:3:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:AdhocCluster:3:ok]' type='shape'>
            <map to='circle'>
              <bucket>1</bucket>
            </map>
            <map to='plus'>
              <bucket>3</bucket>
            </map>
            <map to='square'>
              <bucket>2</bucket>
            </map>
            <map to='times'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:active:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:age:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:age:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:majorcards:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:months:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:expenditure:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:dependents:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[cnt:income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[ctd:income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:reports:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:card:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;no&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;yes&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.4'>
      <aliases enabled='yes' />
      <column caption='Select a State' datatype='string' name='[Select a State]' param-domain-type='list' role='measure' type='nominal' value='&quot;NY&quot;'>
        <calculation class='tableau' formula='&quot;NY&quot;' />
        <members>
          <member value='&quot;AK&quot;' />
          <member value='&quot;AL&quot;' />
          <member value='&quot;AR&quot;' />
          <member value='&quot;AZ&quot;' />
          <member value='&quot;CA&quot;' />
          <member value='&quot;CO&quot;' />
          <member value='&quot;CT&quot;' />
          <member value='&quot;DC&quot;' />
          <member value='&quot;DE&quot;' />
          <member value='&quot;FL&quot;' />
          <member value='&quot;GA&quot;' />
          <member value='&quot;HI&quot;' />
          <member value='&quot;IA&quot;' />
          <member value='&quot;ID&quot;' />
          <member value='&quot;IL&quot;' />
          <member value='&quot;IN&quot;' />
          <member value='&quot;KS&quot;' />
          <member value='&quot;KY&quot;' />
          <member value='&quot;LA&quot;' />
          <member value='&quot;MA&quot;' />
          <member value='&quot;MD&quot;' />
          <member value='&quot;ME&quot;' />
          <member value='&quot;MI&quot;' />
          <member value='&quot;MN&quot;' />
          <member value='&quot;MO&quot;' />
          <member value='&quot;MS&quot;' />
          <member value='&quot;MT&quot;' />
          <member value='&quot;NC&quot;' />
          <member value='&quot;ND&quot;' />
          <member value='&quot;NE&quot;' />
          <member value='&quot;NH&quot;' />
          <member value='&quot;NJ&quot;' />
          <member value='&quot;NM&quot;' />
          <member value='&quot;NV&quot;' />
          <member value='&quot;NY&quot;' />
          <member value='&quot;OH&quot;' />
          <member value='&quot;OK&quot;' />
          <member value='&quot;OR&quot;' />
          <member value='&quot;PA&quot;' />
          <member value='&quot;RI&quot;' />
          <member value='&quot;SC&quot;' />
          <member value='&quot;SD&quot;' />
          <member value='&quot;TN&quot;' />
          <member value='&quot;TX&quot;' />
          <member value='&quot;US&quot;' />
          <member value='&quot;UT&quot;' />
          <member value='&quot;VA&quot;' />
          <member value='&quot;VT&quot;' />
          <member value='&quot;WA&quot;' />
          <member value='&quot;WI&quot;' />
          <member value='&quot;WV&quot;' />
          <member value='&quot;WY&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='US_State' inline='true' name='excel.40618.386151701387' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='US_State' name='excel.40618.386151701387leaf'>
            <connection auto-extract='yes' class='excel' driver='Ace12' header='yes' imex='1' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel.40618.386151701387leaf' name='US_State$' table='[US_State$]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[% Change in Retail Balance]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='abs(avg((IF [Month]=&apos;Nov.&apos; THEN [Retail - Balance] END))-avg((IF [Month]=&apos;Dec.&apos; THEN [Retail - Balance] END)))&#13;&#10;/&#13;&#10;avg(IF [Month]=&apos;Nov.&apos; THEN [Retail - Balance] END)' />
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[excel.40618.386151701387].[avg:Retail - Balance:qk]&quot;' value='Balance' />
          <alias key='&quot;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&quot;' value='Credit Limit' />
          <alias key='&quot;[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]&quot;' value='# of Cards' />
          <alias key='&quot;[excel.40618.386151701387].[avg:Retail - Utilization:qk]&quot;' value='Utilization' />
          <alias key='&quot;[excel.40618.386151701387].[avg:VantageScore:qk]&quot;' value='Rating' />
        </aliases>
      </column>
      <column datatype='real' hidden='true' name='[Bankcard - Balance]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Bankcard - Credit Limit]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Bankcard - Number of Cards]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Bankcard - Utilization]' role='measure' type='quantitative' />
      <column caption='Year New' datatype='datetime' name='[Calculation_713257626398650370]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&quot;year&quot;,5,[Year])' />
      </column>
      <column datatype='string' name='[Month]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;December&quot;' value='Dec.' />
          <alias key='&quot;November&quot;' value='Nov.' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Balance' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Retail - Balance]' role='measure' type='quantitative' />
      <column caption='Credit Limit' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Retail - Credit Limit]' role='measure' type='quantitative' />
      <column caption='Number of Cards' datatype='real' name='[Retail - Number of Cards]' role='measure' type='quantitative' />
      <column caption='Utilization' datatype='real' name='[Retail - Utilization]' role='measure' type='quantitative' />
      <column datatype='boolean' name='[Selected State]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[State]=[Parameters].[Select a State]' />
      </column>
      <column datatype='string' name='[State Label]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Select a State]=[State] THEN [State] END' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Rating' datatype='real' name='[VantageScore]' role='measure' type='quantitative' />
      <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Retail - Balance]' derivation='Avg' name='[avg:Retail - Balance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Credit Limit]' derivation='Avg' name='[avg:Retail - Credit Limit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Number of Cards]' derivation='Avg' name='[avg:Retail - Number of Cards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Utilization]' derivation='Avg' name='[avg:Retail - Utilization:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VantageScore]' derivation='Avg' name='[avg:VantageScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Selected State]' derivation='None' name='[none:Selected State:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Bankcard - Balance]' derivation='Sum' name='[sum:Bankcard - Balance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bankcard - Credit Limit]' derivation='Sum' name='[sum:Bankcard - Credit Limit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bankcard - Number of Cards]' derivation='Sum' name='[sum:Bankcard - Number of Cards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bankcard - Utilization]' derivation='Sum' name='[sum:Bankcard - Utilization:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Balance]' derivation='Sum' name='[sum:Retail - Balance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Credit Limit]' derivation='Sum' name='[sum:Retail - Credit Limit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Number of Cards]' derivation='Sum' name='[sum:Retail - Number of Cards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Utilization]' derivation='Sum' name='[sum:Retail - Utilization:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VantageScore]' derivation='Sum' name='[sum:VantageScore:qk]' pivot='key' type='quantitative' />
      <group name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/YASH/Desktop/Semester 1/MIS 636/Final Project/AER Credit Card Data/Book2.twb Files/Data/Credit Card Workbook/US_State-CCdata.tde' schema='Extract' tablename='Extract' update-time='3/24/2011 10:59:30 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_713257626398650370]' formula='DATEADD(&quot;year&quot;,5,[Year])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Bankcard - Balance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Bankcard - Balance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bankcard - Balance</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>520</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3377.0900000000001</statistic>
                <statistic aggregation='Max' datatype='real'>6845.3000000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bankcard - Credit Limit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Bankcard - Credit Limit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bankcard - Credit Limit</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>520</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>17528.099999999999</statistic>
                <statistic aggregation='Max' datatype='real'>30257.959999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bankcard - Number of Cards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Bankcard - Number of Cards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bankcard - Number of Cards</remote-alias>
              <ordinal>2</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>518</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.4917199999999999</statistic>
                <statistic aggregation='Max' datatype='real'>3.0862099999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bankcard - Utilization</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Bankcard - Utilization]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bankcard - Utilization</remote-alias>
              <ordinal>3</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>520</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>23.124199999999998</statistic>
                <statistic aggregation='Max' datatype='real'>38.129199999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>130</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>4</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>2</scale>
              <width>8</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;December&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;November&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retail - Balance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retail - Balance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retail - Balance</remote-alias>
              <ordinal>6</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>514</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>501.87</statistic>
                <statistic aggregation='Max' datatype='real'>1153.0599999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retail - Credit Limit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retail - Credit Limit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retail - Credit Limit</remote-alias>
              <ordinal>7</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>520</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3954.8000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>7878.1400000000003</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retail - Number of Cards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retail - Number of Cards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retail - Number of Cards</remote-alias>
              <ordinal>8</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>519</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.1367700000000001</statistic>
                <statistic aggregation='Max' datatype='real'>3.0249700000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retail - Utilization</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retail - Utilization]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retail - Utilization</remote-alias>
              <ordinal>9</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>519</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>8.6809999999999992</statistic>
                <statistic aggregation='Max' datatype='real'>19.795100000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>130</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <scale>2</scale>
              <width>2</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VantageScore</remote-name>
              <remote-type>5</remote-type>
              <local-name>[VantageScore]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VantageScore</remote-alias>
              <ordinal>11</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>518</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>705.42399999999998</statistic>
                <statistic aggregation='Max' datatype='real'>789.60400000000004</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>12</ordinal>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2006-11-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2010-12-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_713257626398650370</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_713257626398650370]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_713257626398650370</remote-alias>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2011-11-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-12-01 00:00:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>520</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2013-12-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.331606' group-percentage='0.11399' measure-ordering='alphabetic' measure-percentage='0.440415' parameter-percentage='0.11399' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Balance:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Retail - Number of Cards:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Utilization:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Retail - Utilization:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[excel.40618.386151701387].[sum:VantageScore:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Balance:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Bankcard - Balance:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Bankcard - Number of Cards:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Retail - Number of Cards:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Retail - Balance:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Retail - Utilization:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Bankcard - Utilization:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Retail - Credit Limit:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel.40618.386151701387].[sum:Bankcard - Credit Limit:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Selected State:nk]' palette='tableau-10' type='palette'>
            <map to='#13849a'>
              <bucket>true</bucket>
            </map>
            <map to='#ababab'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;UNITED STATES&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a State' datatype='string' name='[Select a State]' param-domain-type='list' role='measure' type='nominal' value='&quot;NY&quot;'>
          <calculation class='tableau' formula='&quot;NY&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Age' inline='true' name='excel.40618.369542638895' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Age' name='excel.40618.369542638895leaf'>
            <connection auto-extract='yes' class='excel' driver='Ace12' header='yes' imex='1' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel.40618.369542638895leaf' name='Age$' table='[Age$]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Age]' role='dimension' type='nominal' />
      <column caption='Date New' datatype='datetime' name='[Calculation_713257626397184000]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&quot;year&quot;,4,[Date])' />
      </column>
      <column datatype='datetime' default-format='*mmmm, yyyy' name='[Date (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='Dateadd(&apos;month&apos;,(IF [Month] = &apos;November&apos; THEN 11 ELSE 12 END),date(&quot;12/&quot;+str([Year])))' />
      </column>
      <column datatype='string' name='[Date Labels]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(MONTH([Calculation_713257626397184000]))+&quot;-&quot;+STR(YEAR([Calculation_713257626397184000]))' />
      </column>
      <column datatype='datetime' default-format='*mmmm, yyyy' name='[Date]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='Dateadd(&apos;month&apos;,(IF [Month] = &apos;November&apos; THEN 11 ELSE 12 END),date(&quot;12/1/&quot;+str([Year])))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Balance' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Retail - Balance]' role='measure' type='quantitative' />
      <column caption='Credit Limit' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Retail - Credit Limit]' role='measure' type='quantitative' />
      <column caption='Number of Cards' datatype='real' name='[Retail - Number of Cards]' role='measure' type='quantitative' />
      <column caption='Utilization' datatype='real' name='[Retail - Utilization]' role='measure' type='quantitative' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Retail - Balance]' derivation='Avg' name='[avg:Retail - Balance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Credit Limit]' derivation='Avg' name='[avg:Retail - Credit Limit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age]' derivation='None' name='[none:Age:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Balance]' derivation='Sum' name='[sum:Retail - Balance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Credit Limit]' derivation='Sum' name='[sum:Retail - Credit Limit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Number of Cards]' derivation='Sum' name='[sum:Retail - Number of Cards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Retail - Utilization]' derivation='Sum' name='[sum:Retail - Utilization:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/YASH/Desktop/Semester 1/MIS 636/Final Project/AER Credit Card Data/Book2.twb Files/Data/Credit Card Workbook 1/Age-CCdata.tde' schema='Extract' tablename='Extract' update-time='3/24/2011 10:59:15 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_713257626397184000]' formula='DATEADD(&quot;year&quot;,4,[Date])' />
            <calculation column='[Date (copy)]' formula='Dateadd(&apos;month&apos;,(IF [Month] = &apos;November&apos; THEN 11 ELSE 12 END),date(&quot;12/&quot;+str([Year])))' />
            <calculation column='[Date Labels]' formula='STR(MONTH([Calculation_713257626397184000]))+&quot;-&quot;+STR(YEAR([Calculation_713257626397184000]))' />
            <calculation column='[Date]' formula='Dateadd(&apos;month&apos;,(IF [Month] = &apos;November&apos; THEN 11 ELSE 12 END),date(&quot;12/1/&quot;+str([Year])))' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>130</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>0</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>2</scale>
              <width>5</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;18-25&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;76+&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>10</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>1</ordinal>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2007-11-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2011-12-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>130</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>2</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>2</scale>
              <width>8</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;December&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;November&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rating</remote-alias>
              <ordinal>4</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>654.45299999999997</statistic>
                <statistic aggregation='Max' datatype='real'>837.86599999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retail - Balance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retail - Balance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retail - Balance</remote-alias>
              <ordinal>5</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>273.19</statistic>
                <statistic aggregation='Max' datatype='real'>1095.0699999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retail - Credit Limit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retail - Credit Limit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retail - Credit Limit</remote-alias>
              <ordinal>6</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>2090.0300000000002</statistic>
                <statistic aggregation='Max' datatype='real'>8056.0900000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retail - Number of Cards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retail - Number of Cards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retail - Number of Cards</remote-alias>
              <ordinal>7</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.1827300000000001</statistic>
                <statistic aggregation='Max' datatype='real'>2.7840400000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Retail - Utilization</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Retail - Utilization]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Retail - Utilization</remote-alias>
              <ordinal>8</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.7688999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>27.456600000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>130</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>9</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>2</scale>
              <width>4</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2006&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2010&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_713257626397184000</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Calculation_713257626397184000]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_713257626397184000</remote-alias>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2011-11-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-12-01 00:00:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>70</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2013-12-01 00:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date (copy)</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Date (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date (copy)</remote-alias>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date Labels</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Date Labels]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date Labels</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>65</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-3--345405&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;12-2015&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>70</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>260</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.440415' group-percentage='0.0595855' measure-ordering='alphabetic' measure-percentage='0.391192' parameter-percentage='0.108808' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[excel.40618.369542638895].[sum:VantageScore:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel.40618.369542638895]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Bankcard - Balance:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Bankcard - Number of Cards:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Retail - Number of Cards:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Retail - Balance:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Retail - Utilization:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Bankcard - Utilization:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Retail - Credit Limit:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Bankcard - Credit Limit:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[excel.40618.369542638895].[avg:Bankcard - Balance:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[excel.40618.369542638895].[avg:Retail - Credit Limit:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Retail - Credit Limit:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[excel.40618.369542638895].[avg:Bankcard - Credit Limit:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[excel.40618.369542638895].[avg:Retail - Balance:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[excel.40618.369542638895].[sum:Retail - Balance:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Age:nk]' palette='tableau-10' type='palette'>
            <map to='#006ba4'>
              <bucket>&quot;18-25&quot;</bucket>
            </map>
            <map to='#595959'>
              <bucket>&quot;46-55&quot;</bucket>
            </map>
            <map to='#5f9ed1'>
              <bucket>&quot;56-65&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;76+&quot;</bucket>
            </map>
            <map to='#ababab'>
              <bucket>&quot;36-45&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;66-75&quot;</bucket>
            </map>
            <map to='#ff800e'>
              <bucket>&quot;26-35&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;UNITED STATES&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 2 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='CC Balance Scatter' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='CC Balance Scatter' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Credit Usage by Age' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Age' />
        <param name='target' value='Credit Usage by Age' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='CC Time Series' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Age' />
        <param name='target' value='CC Time Series' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='CC Balance Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Average Credit Limit by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US_State' name='excel.40618.386151701387' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a State' datatype='string' name='[Select a State]' param-domain-type='list' role='measure' type='nominal' value='&quot;NY&quot;'>
              <calculation class='tableau' formula='&quot;NY&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.40618.386151701387'>
            <column caption='Year New' datatype='datetime' name='[Calculation_713257626398650370]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,5,[Year])' />
            </column>
            <column caption='Balance' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Retail - Balance]' role='measure' type='quantitative' />
            <column caption='Credit Limit' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Retail - Credit Limit]' role='measure' type='quantitative' />
            <column caption='Number of Cards' datatype='real' name='[Retail - Number of Cards]' role='measure' type='quantitative' />
            <column caption='Utilization' datatype='real' name='[Retail - Utilization]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Selected State]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[State]=[Parameters].[Select a State]' />
            </column>
            <column datatype='string' name='[State Label]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Select a State]=[State] THEN [State] END' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Retail - Balance]' derivation='Avg' name='[avg:Retail - Balance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail - Credit Limit]' derivation='Avg' name='[avg:Retail - Credit Limit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail - Number of Cards]' derivation='Avg' name='[avg:Retail - Number of Cards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail - Utilization]' derivation='Avg' name='[avg:Retail - Utilization:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_713257626398650370]' derivation='MY' name='[my:Calculation_713257626398650370:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Selected State]' derivation='None' name='[none:Selected State:nk]' pivot='key' type='nominal' />
            <column-instance column='[State Label]' derivation='None' name='[none:State Label:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.40618.386151701387].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' included-values='in-range'>
            <min>4930.6770000000006</min>
            <max>7213.7809999999999</max>
          </filter>
          <filter class='categorical' column='[excel.40618.386151701387].[my:Calculation_713257626398650370:ok]'>
            <groupfilter function='level-members' level='[my:Calculation_713257626398650370:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel.40618.386151701387].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.40618.386151701387].[none:State:nk]</column>
            <column>[excel.40618.386151701387].[my:Calculation_713257626398650370:ok]</column>
            <column>[excel.40618.386151701387].[Action (State)]</column>
            <column>[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' scope='cols' value='Balance' />
            <encoding attr='space' class='0' domain-expand='false' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' scope='cols' value='# of Cards' />
            <format attr='subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' scope='cols' value='Utilization' />
            <encoding attr='space' class='0' domain-expand='false' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' field-type='quantitative' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='display' class='0' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' scope='cols' value='Credit Limit' />
            <format attr='subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' scope='cols' value='true' />
            <format attr='height' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' value='50' />
            <format attr='height' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' value='50' />
            <format attr='height' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' value='50' />
            <format attr='height' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' value='50' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='font-family' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' value='Calibri' />
            <format attr='font-family' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' value='Calibri' />
            <format attr='font-family' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' value='Calibri' />
            <format attr='font-weight' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' value='normal' />
            <format attr='font-weight' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' value='normal' />
            <format attr='font-weight' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' value='normal' />
            <format attr='font-weight' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' value='normal' />
            <format attr='font-size' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' value='9' />
            <format attr='font-size' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' value='9' />
            <format attr='font-size' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' value='9' />
            <format attr='font-size' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[excel.40618.386151701387].[none:Selected State:nk]' field-type='nominal' max-size='1' min-size='0.799073' type='catsize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-weight' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' value='bold' />
            <format attr='font-weight' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' value='bold' />
            <format attr='font-weight' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' value='bold' />
            <format attr='font-weight' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' value='bold' />
            <format attr='font-size' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' value='9' />
            <format attr='font-size' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' value='9' />
            <format attr='font-size' field='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' value='9' />
            <format attr='font-size' field='[excel.40618.386151701387].[avg:Retail - Utilization:qk]' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.40618.386151701387].[none:State Label:nk]' />
              <color column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <size column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <lod column='[excel.40618.386151701387].[none:State:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='true' x-axis='true' y-axis='true' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[none:State:nk]&gt;</run>
                <run indent='-3150' lmargin='3150'>&#10;Avg. Retail - Balance:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Balance:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Credit Limit:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Number of Cards:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Utilization:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Utilization:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.97594892978668213' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-color' value='#000000' />
                <format attr='line-visibility' value='on' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[excel.40618.386151701387].[avg:Retail - Balance:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.40618.386151701387].[none:State Label:nk]' />
              <color column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <size column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <lod column='[excel.40618.386151701387].[none:State:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='true' x-axis='true' y-axis='true' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[none:State:nk]&gt;</run>
                <run indent='-3150' lmargin='3150'>&#10;Avg. Retail - Balance:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Balance:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Credit Limit:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Number of Cards:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Utilization:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Utilization:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-color' value='#000000' />
                <format attr='line-visibility' value='on' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.40618.386151701387].[none:State Label:nk]' />
              <color column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <size column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <lod column='[excel.40618.386151701387].[none:State:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='true' x-axis='true' y-axis='true' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[none:State:nk]&gt;</run>
                <run indent='-3150' lmargin='3150'>&#10;Avg. Retail - Balance:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Balance:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Credit Limit:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Number of Cards:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Utilization:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Utilization:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-color' value='#000000' />
                <format attr='line-visibility' value='on' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[excel.40618.386151701387].[avg:Retail - Utilization:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.40618.386151701387].[none:State Label:nk]' />
              <color column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <size column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <lod column='[excel.40618.386151701387].[none:State:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='true' x-axis='true' y-axis='true' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[none:State:nk]&gt;</run>
                <run indent='-3150' lmargin='3150'>&#10;Avg. Retail - Balance:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Balance:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Credit Limit:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Number of Cards:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Utilization:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Utilization:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-color' value='#000000' />
                <format attr='line-visibility' value='on' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel.40618.386151701387].[none:State Label:nk]' />
              <color column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <size column='[excel.40618.386151701387].[none:Selected State:nk]' />
              <lod column='[excel.40618.386151701387].[none:State:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='true' x-axis='true' y-axis='true' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[none:State:nk]&gt;</run>
                <run indent='-3150' lmargin='3150'>&#10;Avg. Retail - Balance:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Balance:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Credit Limit:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Number of Cards:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]&gt;&#10;</run>
                <run indent='-3150' lmargin='3150'>Avg. Retail - Utilization:&#9;</run>
                <run bold='true' indent='-3150' lmargin='3150'>&lt;[excel.40618.386151701387].[avg:Retail - Utilization:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-color' value='#000000' />
                <format attr='line-visibility' value='on' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]</rows>
        <cols>([excel.40618.386151701387].[avg:Retail - Balance:qk] + ([excel.40618.386151701387].[avg:Retail - Credit Limit:qk] + ([excel.40618.386151701387].[avg:Retail - Number of Cards:qk] + [excel.40618.386151701387].[avg:Retail - Utilization:qk])))</cols>
        <page-trail-options enabled='true' lines='true' mark-type='highlighted' />
      </table>
    </worksheet>
    <worksheet name='CC Time Series'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Calibri'>Change by Age Group</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Age' name='excel.40618.369542638895' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a State' datatype='string' name='[Select a State]' param-domain-type='list' role='measure' type='nominal' value='&quot;NY&quot;'>
              <calculation class='tableau' formula='&quot;NY&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.40618.369542638895'>
            <column datatype='string' name='[Age]' role='dimension' type='nominal' />
            <column caption='Date New' datatype='datetime' name='[Calculation_713257626397184000]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,4,[Date])' />
            </column>
            <column datatype='string' name='[Date Labels]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(MONTH([Calculation_713257626397184000]))+&quot;-&quot;+STR(YEAR([Calculation_713257626397184000]))' />
            </column>
            <column datatype='datetime' default-format='*mmmm, yyyy' name='[Date]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='Dateadd(&apos;month&apos;,(IF [Month] = &apos;November&apos; THEN 11 ELSE 12 END),date(&quot;12/1/&quot;+str([Year])))' />
            </column>
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Balance' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Retail - Balance]' role='measure' type='quantitative' />
            <column caption='Credit Limit' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Retail - Credit Limit]' role='measure' type='quantitative' />
            <column caption='Number of Cards' datatype='real' name='[Retail - Number of Cards]' role='measure' type='quantitative' />
            <column caption='Utilization' datatype='real' name='[Retail - Utilization]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date Labels]' derivation='None' name='[none:Date Labels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Retail - Balance]' derivation='Sum' name='[sum:Retail - Balance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail - Credit Limit]' derivation='Sum' name='[sum:Retail - Credit Limit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail - Number of Cards]' derivation='Sum' name='[sum:Retail - Number of Cards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail - Utilization]' derivation='Sum' name='[sum:Retail - Utilization:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.40618.369542638895].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.40618.369542638895].[sum:Retail - Balance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.40618.369542638895].[sum:Retail - Credit Limit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.40618.369542638895].[sum:Retail - Number of Cards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.40618.369542638895].[sum:Retail - Utilization:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel.40618.369542638895].[none:Age:nk]'>
            <groupfilter function='level-members' level='[none:Age:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel.40618.369542638895].[:Measure Names]</column>
            <column>[excel.40618.369542638895].[none:Age:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[excel.40618.369542638895].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel.40618.369542638895].[Multiple Values]' scope='rows' value='true' />
            <format attr='width' field='[excel.40618.369542638895].[Multiple Values]' value='52' />
            <format attr='title' class='0' field='[excel.40618.369542638895].[Multiple Values]' scope='rows' value='' />
            <encoding attr='space' class='0' domain-expand='false' field='[excel.40618.369542638895].[Multiple Values]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='height' field='[excel.40618.369542638895].[none:Date Labels:nk]' value='35' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[excel.40618.369542638895].[sum:Retail - Credit Limit:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.40618.369542638895].[:Measure Names]' value='76' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.40618.369542638895].[:Measure Names]' value='Calibri' />
            <format attr='font-size' field='[excel.40618.369542638895].[:Measure Names]' value='9' />
            <format attr='font-family' field='[excel.40618.369542638895].[none:Date Labels:nk]' value='Calibri' />
            <format attr='font-family' field='[excel.40618.369542638895].[Multiple Values]' value='Calibri' />
            <format attr='font-size' field='[excel.40618.369542638895].[Multiple Values]' value='9' />
            <format attr='font-size' field='[excel.40618.369542638895].[none:Date Labels:nk]' value='9' />
            <format attr='font-weight' field='[excel.40618.369542638895].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='rows' value='#f0f0f0' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='rows' value='on' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[excel.40618.369542638895].[none:Age:nk]' value='Age Group&#10;(click to highlight)'>
              <formatted-text>
                <run fontsize='11'>Age Group</run>
                <run bold='false' fontcolor='#555555' italic='true'>&#10;(click to highlight)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[excel.40618.369542638895].[none:Age:nk]' value='Select Age Group&#10;(to compare)'>
              <formatted-text>
                <run fontsize='11'>Select Age Group</run>
                <run bold='false' fontcolor='#555555' italic='true'>&#10;(to compare)</run>
              </formatted-text>
            </format>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Select a State]' value='Select State:' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[excel.40618.369542638895].[none:Age:nk]' />
              <lod column='[excel.40618.369542638895].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11' indent='2340'>&lt;[excel.40618.369542638895].[:Measure Names]&gt;</run>
                <run indent='2340'>&#10;Age Group:     </run>
                <run bold='true' indent='2340'>&lt;[excel.40618.369542638895].[none:Age:nk]&gt;</run>
                <run indent='2340'>&#10;Avg. Value:      </run>
                <run bold='true' indent='2340'>&lt;[excel.40618.369542638895].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
                <format attr='font-family' value='Calibri Light' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel.40618.369542638895].[:Measure Names] * [excel.40618.369542638895].[Multiple Values])</rows>
        <cols>[excel.40618.369542638895].[none:Date Labels:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='CC US State'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Averages for </run>
            <run bold='true' fontcolor='#4bb4b4' fontsize='12'>&lt;[Parameters].[Select a State]&gt;</run>
            <run bold='true' fontcolor='#87bba8' fontsize='12'>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US_State' name='excel.40618.386151701387' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a State' datatype='string' name='[Select a State]' param-domain-type='list' role='measure' type='nominal' value='&quot;NY&quot;'>
              <calculation class='tableau' formula='&quot;NY&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.40618.386151701387'>
            <column datatype='real' name='[% Change in Retail Balance]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='abs(avg((IF [Month]=&apos;Nov.&apos; THEN [Retail - Balance] END))-avg((IF [Month]=&apos;Dec.&apos; THEN [Retail - Balance] END)))&#13;&#10;/&#13;&#10;avg(IF [Month]=&apos;Nov.&apos; THEN [Retail - Balance] END)' />
            </column>
            <column caption='Year New' datatype='datetime' name='[Calculation_713257626398650370]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,5,[Year])' />
            </column>
            <column datatype='string' name='[Month]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;December&quot;' value='Dec.' />
                <alias key='&quot;November&quot;' value='Nov.' />
              </aliases>
            </column>
            <column caption='Balance' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Retail - Balance]' role='measure' type='quantitative' />
            <column caption='Credit Limit' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[Retail - Credit Limit]' role='measure' type='quantitative' />
            <column caption='Number of Cards' datatype='real' name='[Retail - Number of Cards]' role='measure' type='quantitative' />
            <column caption='Utilization' datatype='real' name='[Retail - Utilization]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Selected State]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[State]=[Parameters].[Select a State]' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Rating' datatype='real' name='[VantageScore]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Retail - Balance]' derivation='Avg' name='[avg:Retail - Balance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail - Credit Limit]' derivation='Avg' name='[avg:Retail - Credit Limit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail - Number of Cards]' derivation='Avg' name='[avg:Retail - Number of Cards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Retail - Utilization]' derivation='Avg' name='[avg:Retail - Utilization:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VantageScore]' derivation='Avg' name='[avg:VantageScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Selected State]' derivation='None' name='[none:Selected State:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Change in Retail Balance]' derivation='User' name='[usr:% Change in Retail Balance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_713257626398650370]' derivation='Year' name='[yr:Calculation_713257626398650370:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel.40618.386151701387].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.40618.386151701387].[avg:Retail - Balance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.40618.386151701387].[avg:Retail - Utilization:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel.40618.386151701387].[avg:VantageScore:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel.40618.386151701387].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Balance:qk]&quot;</bucket>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]&quot;</bucket>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]&quot;</bucket>
              <bucket>&quot;[excel.40618.386151701387].[avg:Retail - Utilization:qk]&quot;</bucket>
              <bucket>&quot;[excel.40618.386151701387].[avg:VantageScore:qk]&quot;</bucket>
              <bucket>&quot;[excel.40618.386151701387].[usr:\% Change in Retail Balance:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel.40618.386151701387].[none:Selected State:nk]'>
            <groupfilter function='member' level='[none:Selected State:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[excel.40618.386151701387].[yr:Calculation_713257626398650370:ok]' direction='DESC' using='[excel.40618.386151701387].[avg:Retail - Number of Cards:qk]' />
          <slices>
            <column>[excel.40618.386151701387].[:Measure Names]</column>
            <column>[excel.40618.386151701387].[none:Selected State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[excel.40618.386151701387].[:Measure Names]' value='33' />
            <format attr='text-format' field='[excel.40618.386151701387].[avg:Retail - Balance:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[excel.40618.386151701387].[avg:Retail - Credit Limit:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel.40618.386151701387].[:Measure Names]' value='92' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[excel.40618.386151701387].[yr:Calculation_713257626398650370:ok]' value='Calibri' />
            <format attr='font-weight' field='[excel.40618.386151701387].[yr:Calculation_713257626398650370:ok]' value='bold' />
            <format attr='font-family' field='[excel.40618.386151701387].[:Measure Names]' value='Calibri' />
            <format attr='font-weight' field='[excel.40618.386151701387].[:Measure Names]' value='bold' />
            <format attr='font-size' field='[excel.40618.386151701387].[yr:Calculation_713257626398650370:ok]' value='10' />
            <format attr='font-size' field='[excel.40618.386151701387].[:Measure Names]' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel.40618.386151701387].[Multiple Values]' field-type='quantitative' max-size='1' min-size='1' type='quantsize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[excel.40618.386151701387].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11' indent='1890'>&lt;[excel.40618.386151701387].[yr:Calculation_713257626398650370:ok]&gt;</run>
                <run indent='1890'>&#10;&lt;[excel.40618.386151701387].[:Measure Names]&gt;: </run>
                <run bold='true' indent='1890'>&lt;[excel.40618.386151701387].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>&lt;</run>
                <run fontsize='10'>[excel.40618.386151701387].[Multiple Values]</run>
                <run fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.0214917659759521' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel.40618.386151701387].[:Measure Names]</rows>
        <cols>[excel.40618.386151701387].[yr:Calculation_713257626398650370:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Self-Employed vs Card</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column caption='Card' datatype='string' name='[card]' role='dimension' type='nominal' />
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[card]' derivation='None' name='[none:card:nk]' pivot='key' type='nominal' />
            <column-instance column='[selfemp]' derivation='None' name='[none:selfemp:nk]' pivot='key' type='nominal' />
            <column caption='Selfemp' datatype='string' name='[selfemp]' role='dimension' type='nominal' />
            <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:selfemp:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]</rows>
        <cols>([federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk] / [federated.1i62fnb0si72f7156akmq1r1bzbb].[none:selfemp:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Active Customer vs Card</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column caption='Active' datatype='integer' name='[active]' role='measure' type='quantitative' />
            <column caption='Card' datatype='string' name='[card]' role='dimension' type='nominal' />
            <column-instance column='[card]' derivation='None' name='[none:card:nk]' pivot='key' type='nominal' />
            <column-instance column='[active]' derivation='Sum' name='[sum:active:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:active:qk]' />
              <text column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' />
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Customer Income vs Age</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column caption='Card' datatype='string' name='[card]' role='dimension' type='nominal' />
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[card]' derivation='None' name='[none:card:nk]' pivot='key' type='nominal' />
            <column-instance column='[income]' derivation='None' name='[none:income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age]' derivation='Sum' name='[sum:age:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:age:qk]</rows>
        <cols>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:income:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 14'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Customer Income vs Dependents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
              <statistical-model class='cluster-k-means'>
                <model-specification>
                  <analysis-fields>
                    <column name='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:dependents:qk]' />
                    <column name='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]' />
                  </analysis-fields>
                </model-specification>
                <model-summary num-desired-clusters='0' />
              </statistical-model>
            </column>
            <column caption='Dependents' datatype='integer' name='[dependents]' role='measure' type='quantitative' />
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dependents]' derivation='Sum' name='[sum:dependents:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:2:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:dependents:qk]</rows>
        <cols>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 15'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Months/Reports vs Customer Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column auto-hidden='true' caption='Clusters (3)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:4]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
              <statistical-model class='cluster-k-means'>
                <model-specification>
                  <analysis-fields>
                    <column name='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]' />
                    <column name='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:months:qk]' />
                    <column name='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:reports:qk]' />
                  </analysis-fields>
                </model-specification>
                <model-summary num-desired-clusters='0' />
              </statistical-model>
            </column>
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column caption='Months' datatype='integer' name='[months]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:4]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:4:ok]' pivot='key' type='ordinal' />
            <column caption='Reports' datatype='integer' name='[reports]' role='measure' type='quantitative' />
            <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[months]' derivation='Sum' name='[sum:months:qk]' pivot='key' type='quantitative' />
            <column-instance column='[reports]' derivation='Sum' name='[sum:reports:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:4:ok]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:months:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:4:ok]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:reports:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:4:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]</rows>
        <cols>([federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:months:qk] + [federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:reports:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Customer Age vs Card</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column aggregation='None' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[age]' peg='0' size='3.23' />
            </column>
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column caption='Card' datatype='string' name='[card]' role='dimension' type='nominal' />
            <column-instance column='[age]' derivation='Count' name='[cnt:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[card]' derivation='None' name='[none:card:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[cnt:age:qk]</rows>
        <cols>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:Age (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1i62fnb0si72f7156akmq1r1bzbb].[Age (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Customer Measures vs Card</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column caption='Active' datatype='integer' name='[active]' role='measure' type='quantitative' />
            <column caption='Age' datatype='real' name='[age]' role='measure' type='quantitative' />
            <column caption='Card' datatype='string' name='[card]' role='dimension' type='nominal' />
            <column caption='Dependents' datatype='integer' name='[dependents]' role='measure' type='quantitative' />
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column caption='Majorcards' datatype='integer' name='[majorcards]' role='measure' type='quantitative' />
            <column caption='Months' datatype='integer' name='[months]' role='measure' type='quantitative' />
            <column-instance column='[card]' derivation='None' name='[none:card:nk]' pivot='key' type='nominal' />
            <column caption='Reports' datatype='integer' name='[reports]' role='measure' type='quantitative' />
            <column-instance column='[active]' derivation='Sum' name='[sum:active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[age]' derivation='Sum' name='[sum:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dependents]' derivation='Sum' name='[sum:dependents:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[majorcards]' derivation='Sum' name='[sum:majorcards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[months]' derivation='Sum' name='[sum:months:qk]' pivot='key' type='quantitative' />
            <column-instance column='[reports]' derivation='Sum' name='[sum:reports:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:active:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:age:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:dependents:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:majorcards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:months:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:reports:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i62fnb0si72f7156akmq1r1bzbb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[Multiple Values]</rows>
        <cols>([federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk] / [federated.1i62fnb0si72f7156akmq1r1bzbb].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Customer Income vs Card</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column aggregation='None' datatype='integer' name='[Income (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[income]' peg='0' size='0.51' />
            </column>
            <column caption='Card' datatype='string' name='[card]' role='dimension' type='nominal' />
            <column-instance column='[income]' derivation='Count' name='[cnt:income:qk]' pivot='key' type='quantitative' />
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[Income (bin)]' derivation='None' name='[none:Income (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[card]' derivation='None' name='[none:card:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[cnt:income:qk]</rows>
        <cols>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:Income (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1i62fnb0si72f7156akmq1r1bzbb].[Income (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Customer Income vs Active</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column caption='Active' datatype='integer' name='[active]' role='measure' type='quantitative' />
            <column caption='Card' datatype='string' name='[card]' role='dimension' type='nominal' />
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[card]' derivation='None' name='[none:card:nk]' pivot='key' type='nominal' />
            <column-instance column='[income]' derivation='None' name='[none:income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[active]' derivation='Sum' name='[sum:active:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:active:qk]</rows>
        <cols>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:income:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Customer Income vs Majorcards</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
              <statistical-model class='cluster-k-means'>
                <model-specification>
                  <analysis-fields>
                    <column name='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]' />
                    <column name='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:majorcards:qk]' />
                  </analysis-fields>
                </model-specification>
                <model-summary num-desired-clusters='0' />
              </statistical-model>
            </column>
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column caption='Majorcards' datatype='integer' name='[majorcards]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[majorcards]' derivation='Sum' name='[sum:majorcards:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:majorcards:qk]</rows>
        <cols>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Customer Income vs Expenditure</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column caption='Expenditure' datatype='real' name='[expenditure]' role='measure' type='quantitative' />
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[expenditure]' derivation='Sum' name='[sum:expenditure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='color' value='#59a14f' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:expenditure:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.0' value-column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:expenditure:qk]' z-order='1' />
            <reference-line axis-column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:expenditure:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='automatic' scope='per-table' value='0.0' value-column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:expenditure:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a7acad' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:expenditure:qk]</rows>
        <cols>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>House-Owner vs Card</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AER_credit_card_data' name='federated.1i62fnb0si72f7156akmq1r1bzbb' />
          </datasources>
          <datasource-dependencies datasource='federated.1i62fnb0si72f7156akmq1r1bzbb'>
            <column caption='Card' datatype='string' name='[card]' role='dimension' type='nominal' />
            <column caption='Income' datatype='real' name='[income]' role='measure' type='quantitative' />
            <column-instance column='[card]' derivation='None' name='[none:card:nk]' pivot='key' type='nominal' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column caption='Owner' datatype='string' name='[owner]' role='dimension' type='nominal' />
            <column-instance column='[income]' derivation='Sum' name='[sum:income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:owner:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i62fnb0si72f7156akmq1r1bzbb].[sum:income:qk]</rows>
        <cols>([federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk] / [federated.1i62fnb0si72f7156akmq1r1bzbb].[none:owner:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Credit Usage by Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#555555' fontname='Calibri' fontsize='16'>Credit Card Usage by Age Group</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#b4b4b4' />
        </style-rule>
      </style>
      <size maxheight='640' maxwidth='1000' minheight='640' minwidth='1000' />
      <datasources>
        <datasource caption='Age' name='excel.40618.369542638895' />
      </datasources>
      <datasource-dependencies datasource='excel.40618.369542638895'>
        <column datatype='string' name='[Age]' role='dimension' type='nominal' />
        <column-instance column='[Age]' derivation='None' name='[none:Age:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97500' id='9' param='vert' type='layout-flow' w='98400' x='800' y='1250'>
            <zone fixed-size='56' h='9375' id='8' is-fixed='true' type='title' w='98400' x='800' y='1250'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='margin-top' value='0' />
                <format attr='margin-right' value='0' />
                <format attr='margin-left' value='0' />
              </zone-style>
            </zone>
            <zone h='88125' id='5' param='horz' type='layout-flow' w='98400' x='800' y='10625'>
              <zone h='88125' id='3' type='layout-basic' w='83000' x='800' y='10625'>
                <zone h='88125' id='1' name='CC Time Series' show-title='false' w='79762' x='800' y='10625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='margin-bottom' value='0' />
                    <format attr='margin-left' value='0' />
                  </zone-style>
                </zone>
                <zone h='88125' id='10' param='horz' type='layout-flow' w='3238' x='80562' y='10625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='margin-bottom' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='154' h='88125' id='4' is-fixed='true' param='vert' type='layout-flow' w='15400' x='83800' y='10625'>
                <zone fixed-size='189' h='30781' id='6' is-fixed='true' name='CC Time Series' pane-specification-id='2' param='[excel.40618.369542638895].[none:Age:nk]' type='color' w='15400' x='83800' y='10625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='margin-right' value='0' />
                  </zone-style>
                </zone>
                <zone h='30156' id='7' name='CC Time Series' param='[excel.40618.369542638895].[none:Age:nk]' type='filter' w='15400' x='83800' y='41406'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='margin-right' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
            <format attr='margin-top' value='8' />
            <format attr='margin-right' value='8' />
            <format attr='margin-bottom' value='8' />
            <format attr='margin-left' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Credit Usage by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#555555' fontname='Calibri' fontsize='16'>Credit Card Usage by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#b4b4b4' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#dfedeb' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
          <format attr='font-family' value='Segoe UI' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-family' value='Calibri' />
          <format attr='font-size' value='11' />
        </style-rule>
      </style>
      <size maxheight='640' maxwidth='1000' minheight='640' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97500' id='33' param='horz' type='layout-flow' w='98400' x='800' y='1250'>
            <zone h='97500' id='31' type='layout-basic' w='98400' x='800' y='1250'>
              <zone h='90340' id='4' param='horz' type='layout-flow' w='98400' x='800' y='8410'>
                <zone h='90340' id='2' type='layout-basic' w='98400' x='800' y='8410'>
                  <zone h='35644' id='12' name='CC US State' w='98400' x='800' y='63106'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-bottom' value='0' />
                      <format attr='margin-left' value='0' />
                    </zone-style>
                  </zone>
                  <zone custom-title='true' h='8531' id='8' mode='compact' param='[Parameters].[Select a State]' type='paramctrl' w='49398' x='800' y='8410'>
                    <formatted-text>
                      <run>Select a State </run>
                      <run bold='false' fontcolor='#555555' fontsize='9' italic='true'>(Click on a point below to view values on chart)</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-left' value='0' />
                    </zone-style>
                  </zone>
                  <zone h='46165' id='1' name='CC Balance Scatter' w='98400' x='800' y='16941'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='margin-left' value='0' />
                    </zone-style>
                  </zone>
                  <zone h='8531' id='34' param='vert' type='layout-flow' w='49002' x='50198' y='8410'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='7160' id='14' type='title' w='98400' x='800' y='1250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-top' value='0' />
                  <format attr='margin-left' value='0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
            <format attr='margin-top' value='8' />
            <format attr='margin-right' value='8' />
            <format attr='margin-bottom' value='8' />
            <format attr='margin-left' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Customer Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Customer Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='border-style' value='none' />
          <format attr='background-color' value='#b4b4b4' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#dfedeb' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='15' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='5' param='horz' type='layout-flow' w='98400' x='800' y='6250'>
              <zone h='92750' id='3' type='layout-basic' w='81500' x='800' y='6250'>
                <zone h='30916' id='1' name='Sheet 2' w='40750' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30916' id='7' name='Sheet 4' w='40750' x='41550' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30916' id='8' name='Sheet 9' w='27101' x='800' y='68084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30916' id='10' name='Sheet 11' w='28683' x='27901' y='68084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30918' id='13' name='Sheet 3' w='81500' x='800' y='37166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30916' id='12' name='Sheet 12' w='25716' x='56584' y='68084'>
                  <layout-cache fixed-size-w='152' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='169' h='92750' id='4' is-fixed='true' param='vert' type='layout-flow' w='16900' x='82300' y='6250'>
                <zone h='8250' id='6' name='Sheet 2' pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' type='color' w='16900' x='82300' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8250' id='11' name='Sheet 11' pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:selfemp:nk]' type='color' w='16900' x='82300' y='14500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8250' id='9' name='Sheet 9' pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:owner:nk]' type='color' w='16900' x='82300' y='22750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='20750' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[:Measure Names]' type='color' w='16900' x='82300' y='31000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Customer Income Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Customer Income Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#b4b4b4' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#dfedeb' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='18' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='17' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='5' param='horz' type='layout-flow' w='98400' x='800' y='6250'>
              <zone h='92750' id='3' type='layout-basic' w='82400' x='800' y='6250'>
                <zone h='30917' id='7' name='Sheet 7' w='41200' x='800' y='37166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30916' id='9' name='Sheet 8' w='41200' x='42000' y='68084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30916' id='10' name='Sheet 13' w='41200' x='42000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30917' id='11' name='Sheet 14' w='41200' x='800' y='68083'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30918' id='13' name='Sheet 15' w='41200' x='42000' y='37166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='30916' id='15' name='Sheet 5' w='41200' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92750' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='6250'>
                <zone h='8250' id='16' name='Sheet 5' pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' type='color' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13250' id='8' name='Sheet 7' pane-specification-id='2' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:1:ok]' type='color' w='16000' x='83200' y='14500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13250' id='14' name='Sheet 15' pane-specification-id='1' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:4:ok]' type='color' w='16000' x='83200' y='27750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8250' id='12' name='Sheet 14' pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:2:ok]' type='color' w='16000' x='83200' y='41000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:owner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:owner:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:selfemp:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:selfemp:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[:Measure Names]</field>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:owner:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:2:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:2:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:4:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:4:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='CC Balance Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='CC US State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='CC Time Series'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[excel.40618.369542638895].[none:Age:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[excel.40618.369542638895].[none:Age:nk]'>
          <bucket-selection />
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Customer Analysis'>
      <viewpoints>
        <viewpoint name='Sheet 11'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:selfemp:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 12' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:card:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 9'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:owner:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
    </window>
    <window class='dashboard' name='Customer Income Analysis'>
      <viewpoints>
        <viewpoint name='Sheet 13'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 14'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:2:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 15'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i62fnb0si72f7156akmq1r1bzbb].[none:AdhocCluster:1:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Credit Usage by State'>
      <viewpoints>
        <viewpoint name='CC Balance Scatter'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel.40618.386151701387].[none:Selected State:nk]</field>
            </color-one-way>
          </highlight>
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='CC US State'>
          <zoom type='fit-width' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Credit Usage by Age'>
      <viewpoints>
        <viewpoint name='CC Time Series'>
          <zoom type='entire-view' />
          <highlight field='[excel.40618.369542638895].[none:Age:nk]'>
            <bucket-selection />
          </highlight>
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CC Balance Scatter' width='192'>
      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
      wgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CC Time Series' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='189' name='CC US State' width='192'>
      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
      pskASJr2/+d/fIyNPviQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Credit Usage by Age' width='192'>
      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
      Rn0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Credit Usage by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Income Analysis' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      F1CdGsT52i+gxwfqnvdOvUDmKx8rxTlUY7dyNYzlt+AdeyIQspoOuwF3epa+6HqCOGcCoJXP
      kf5z3Hzb7XRHHQZGFduvW8bJU2fm6hFvPSgfuIrUT9+p9KgoH/wmVg/fQXv5huqWGjsZnCus
      RL4TGKJNwFz3DvwzL0OdIgHazUI+hXYzTbVVgzr9ndM9wibGL/DC0z8m2dlNpKWdWDwJQ+eL
      TJ/C5nfToXC94zSvO06HZtsrBOAc10X6PmiN4zg4bnA8nc0X26lu0/O8hs/wvKAtz/MQgOt6
      gS4bjn+tdbDRoFI1bWilUH7t8WqosO+u61D+0zZ6d+V54AXvU7rXw5/mObpwbT5X91ovPYJW
      Hk4uja9UEIjK58Fo/NtrN3AKqNYV6MwIzuQgQlRyyVVqBAjYhc38lgUnhgh/Oz87UXPfnHKC
      e3uWoMwoOV/gDp/mjbGzJBevmzEjzPM8XNfFtmdOpm8Ex3Gaaq9Qj8i2LAzt4QuBbdv4Ouiz
      lEaxneo2TdNs+AzTNCCsd+QDZuYCItZB4ecQQqCFQKja9xZSQtiPAsZSOcYmc6xa0l485pkm
      LmDiIsuubfTuhestqVCFv1smxjTfSZkmDmBqB7POtcqdRIVtaSnxtY9lGQizcbu+ZeEAlmXj
      CokpRU0/PC+FSxAkbea3LDhShBX0V/j5mvvmzgYQkvWbrmdRdw83bN7Elq03sHz1BtYu65pV
      c/OiNGKTuvSMK1gol+z3fqtu/n2joFHerTz+zJ5T/PV3X5sbm2K2vn9V35Wrs1UeLt8J1b0m
      IA0wrLouy0K7s66hdFlVIMC0Y/QsjoX/aGFRbHbtXO3KcM0ilXVpNcxpXaNaB5UflNLkXQ9T
      E6QdX0LQyfUUqZyDrxSmUTWPzZBi6R56FJ2+OON76+XWAOj0cOUBpeYkiUplwnZnSSGt50Fa
      cIPOEOUz8We+9QovHpjeyPfPvYHz3J/OeV9cz0fVc6vWMyCVR/6ZP0LV8dy4+7+Ne+DboP2m
      XagA1PGqaOUHfnytigNVz8AIngo6fWlFhBciwTOAKtQHmjxXkZ+ilMa/eBjv1PMMjqX58Rsn
      SeemjurqsYG6A+9SoDPDOJ5P02EFJ417+PuooSO157x8MEs3gD98nOx3fzMYyOV9cOp4Y/x8
      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
      zX/oWBhpN5HGcgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
      kwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
      Pwdh/yCQoFaUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AiAU93/YHRu4EF+LGQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      55hgRaFULFDMJrB8Edr6h1FKSRL5Cm1h7/eW1Q2TnULF1vPbHPstHMQy8ug5ez1S3eExFFeg
      ngFQ6WsLc2tmk0tXxsmldmhr6WZlM0lruKuKUZ+Nr/jLv8FIzB14ec/on+J7/6/fYkVVsCww
      bM7S4VLB5kD2t8korbIz+19trRM9+3PcwcE6jgdQFDqPjdB57NnDUGcrAMf6gnXbRD3phSeU
      Nv7e1jqhY/8ZxfVdP3Yzt4GVXjrw+lYx9b3HRU0jXsjbqqEnEsVVz0HtK+vw68/trfPv/zX8
      QM7rFMvuxDJVME0TwzBIpVKYpkmxYrAW321GBwvL2n2ajKGeZlyqgmmaqKrKamaZsl7edVu7
      zRgQ9TfRFmrHsiwURcEy8hil1d1KwMLatQZ38AQorpfbMBPzWHrx9acwLRT19fWVQCtqtPtl
      DSVdI55/PQAWgLV7DT3RJlTlu/2ws5XB0PQD7wdfyE8gFnpZAxUNsru8F5aFxR5TlrQ0w/PX
      V67oLG1lX18GsCwTRXm9hmOdTXg93+3HjewaBa1w4NcQ8obpjHR9NyeSVcYo7v5FtNd74QoM
      oqjewwnAC4lEglgstuecLi9K2W+eGE3T8Hg8e/7e2uOD84Ku6y/nKJIaaqthP4fxGgzD2Hea
      nYPU0FBDIg+ys980H8ybnqPW30sNB/OuvIaGCsD83a94lPXQEYD3rlzZdZn9ZgQzyyn+4f9+
      xsjJYxhtI5zpCdtaH2B1cRHdLJAoeLh05uQR1lAkXnBzuZoaKhkWV7Kk4yt0j16mK+p9bZl6
      1LCfpUd3ub2c4XhriDPjl/C4dmmG7FeDvsOn//RrYv2n8MY6OTfY8doibwrQ+uIilktjJaFz
      +dwIrl2aQg0VgPRODr2oktD2PizuxyrvUNAttuNJQk2vt4sPYmFhFp0omqIB9t/4+tTwLTqR
      6mvIx7k1PcdYT5gn61m6om2HXkMykwMtTzxt8vxswt4TVPIUdBMjkaAp0Gp7+wCLywtUNAXd
      q6Ibw7sGoKHOASrFHFvxFKFYK80R+1ePLMskubVBXlPo6urE41JtX61bX1kkGGsnk0ow0N9f
      RQ0Wqe0N8hp0dXXt+s23z8pYlkUxn6WMB9UyaIpGq6jBILGdJBj0ofjCBDz2rxrVuh/0coGN
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d5Rkx33f+6kbOk3Os7M5B+xiF1hkgAQIkAAYQIIiKUoURSVKoizZeqYs
      2U9+lmTLFp8t2XrWkU0ri4cSSYAJpAiBJAgiA4u4AZvz7O7k3PmGqnp/3O6enHZ7Znp2+nvO
      nJnpvrdu3XvrV/WL3xJaa00ZZaxQGEvdgTLKWEqUBaCMFY1FFQApJUulcfm+X25zhbWplEJK
      OeMxiyoAcx38vu8zMjJS1GsrpYraXrnN0m9zLuOtJFUgIQSWZS11N8pYAShJASijjMVCWQDK
      WNEoWQEohyfKWAyUpABorWe13ssooxgoSQEQQmCa5lJ3Y9GhtUInu9HSXequrBiUpABAIAQr
      DfLiS7iPf5rs039QVgEXCSUrACsROjMM2WF0uh9U8QNNZUxGWQBKCNbm+xCVzdg7H0GY9lJ3
      Z0WgJAVAa70gofaShxkCYYFRHvyLhZIUAADDKNmuLRykB7rs/VpMlOQoE0KsTAHQCsrG76Li
      mkfZYO8Vzp5rx/El2eQw5y9cxteaTGKQC+0d+OX3WUYJ4xozzjTZrEdIxTl2zkSMXKa6JsLx
      0wJ3uJPqqhBn2212bGguTm/LKKPIuEYBEFSE4I1TfezYt4ERVcfm7ds58toLRBo3s3l1HSfa
      u1CqESklSqk5pbxKKXEcB9sunjEopcR1ixtgKnqbnodGI90MuojtLot7X4A2tdazZhVcowB4
      iFgL99xmceR8H6ZMko534oVbUCNDJGs02ohgGAaGYeD7PqZpzhrk8n0fz/MIhULX1r0xcF23
      qO0tRJta2biAKTT2Crv3hWgzP/Bnyiq45hWgp/0E3XGf3fv2IZI2B4/3sP+WfaR7L3L8wiA3
      3bRn/q2u0FSIMhYf1ygAFlv37Gdr/t+K9dzdsh6ASNsm7my7ttbLKGOhsQJ9jWWUMYqSFIBy
      OnQZi4WSFIAyylgslKQAlI3gMhYLJSkAZZSxWCgLQAlCU84fWSyUpABorReEeGnZwE0vdQ9W
      DEpSAGBhmMfKKGMiSlIAysxwZSwWSlIAyihjsVAWgBKCVjIoiilj0VCyArAiaUGUXxaARUZJ
      CkA5FaKMxUJJCkA5ElzGYqEkBQBWJjNcGYuPkhWAlYwyN+jioSwApQjlLXUPVgxKUgBWLDNc
      GYuOaxaA1FAPR4+fIu36DPde5siRI/QMpUkN93Ly9AX8q/TqrUhirDIWHdc8ygaG4jTVGJw+
      303H5R6a16yhOqI4fvoSESPN6Yvd825zxTLDlbHouOaEm7bVbZw/e4E161bTfuQ0p945ytat
      W4g2tLK2wAuk5sULpJTC87yicsQsCx4bzy/EQFbavS9Em4vACwTnzp1nzeYdxEImevuN1Ebh
      jXcuYlkhElXyqniBpJRIKVccL5ByLbxcDGSl3ftCtDkXXqBr1DMkbnKENw68zOkr/ajUAAcO
      nWfv/pvZvq6Gk5fj7Ni8et6tXm9GsPP6X5L+1q+iRi4vdVfKmIBrXAFM9tx2z5j/m8nRAkHz
      eu64BkrQ68kG8A59BZ3qR3YcxKhZu9TdKWMMSnKUXW9GsH3zZxBVq7A23Tu3E8oVYYuG62eU
      lTBEtB7sWLADzBxQrglePJQFYDHgZ5e6B2VMg5IUgHI6dBmLhZIUgBUL6QVVYWUsGkpSAFZs
      PYBWUNb/FxUlKQBllLFYKAtAGSsaJSkAK54ZroxFQ0kKAKxwZjh5/aSBlDpKUgBWPDOcdGY9
      REsP7c9+XBkzoyQFoIyZoZVP9unfJ/3Yz6JGrix1d5Y1ygKwHCE95KVXUX2nUPHOpe7NskZJ
      CkC+kKGMqSHsKPbuj2E0bcdcdeNSd2dZoyQFACinQswCEa5CWGEQJfsKlwVK8uldd5HgBUhv
      0Lo8QRQDJSkAcH0xw+mFyAb1yhmmxUDJCkAZZSwGrlkAEv0dvHXwCEnHJzXUw8HDJ/CUJjnQ
      yeGjp/CuMp61ko3gckbo4uGaBWAk5bJ5TTVnznVy8mw7a5tNjh6/wInzPTRXC05f6Jp3myu+
      HqBcQLNouOZwa2tLI2fPXWLdmg10d6ZpXLWVzksvYDduprm5joGr5AXSWl833DhKStAaz/NA
      TzDupVsoldS+DxqUmv3epZQorfFcD2bxFywHDp+FaHMReIE0p06dYc2mHcQiFheTcQZ7zuPH
      1iAH+xiIOGDGViQvkNa6sOOLNk2kENi2jbBHj/dOfA/nlT8jfPvnsG74KNqycAUYhpi1r9o0
      QQjskI2YpdZ4OXD4LESbi8ALpDC15PjRw1zqTbBjyzoudDnceMMmdmxs5sqAz/ZNbdd2iVJG
      Zmj6fBzpkvnuvyL1tw+jE13BTD/BrpE9R9HxTmTnISBIcWAlJwEuAa6ZF2jHvlvHfbK/rhWA
      qsbV3Nx4ba2XMmT3Udx//m1k624iD30BYU54lFqh+k6iU31BuoKSTKz2snd9BO/ot7B3fzRY
      FbUEygKwmChJN+hyYIbTqV50oitIRpsqe9OKYO/5OEbzLsy2fVO2IewYCAFmeOH66bvoZHc5
      c3QalKQAQOkzw5nr78GoWYO19UFEqGLS90IIMEMIOwosXVDPP/UU7lc/ifPif1+yPpQySnKU
      LQdmOGGFggFuRZa6KzNCu0nwUujsyFJ3pSRR2qOsxLEgKQ5FhrXtIURFI/auR5e6KyWJsgBc
      C+YQsdVXk7PjZa6iM7PAuI6SC4uIkhSA6yoSfBU7v6/kNJDFRkkKwHWHhZjRVWl7yZYLSlIA
      rpt6gDzN+VWsArOh7NYsDuYUCOs6fxI/UoMVrmRVQ9VC9+k6QlmVKXXMYQWI8/3vPcXJE2d4
      7aWjC9+jMuYM7Tvl1IlrxBwEIEpzcwXvvP461etWLXyPKDPDzR1Ls8JoP4seuXxd1C3MQQA8
      UBGat+5g75bFEQBY4cxwJQytNd7Rb+J+/WdxX/+rpe7ONWMOAhBm3x13UO138eRzBxe+R5SZ
      4YoK3ykq1aIQAp0ZBieBzg4Xrd2lwhxGmUtX1xD77/8EbU01C9+jMkrexWlteS/uW39/XUSX
      Z1kBHA6/+Q7tZ4/z5BOP86PXTy1Or1Y6Sj3FIs9FZNpL248iYJYVIMzeW3ZhhZq5YXcjR4/1
      LUqnrisj+Hrm7yl1QZ0DZhEAycVT7/DSSxfJZtfihee/6/vVQOTKB68HBAlzc/TW+O6CkGjl
      elL8Fq9/L5DJhu03snfvDdx88w0IZ3LBspdN0T8UByA51Mu5c+cYTGTJJodov9yFvIrnXuyC
      +OUDzUK5NrVbxHQMrSeVdy5XzMEINjj7zqvEh06Qrrhh0rfdnZfojgsa6yppP3OeyKrVmHgc
      PXaaigqbM8pix/qmBeh6GUsG5ZW8oT5XzEEAonz80x/n2LEzrGmsn/Tt2k1bSJ64BFqTyibp
      v3iJqm02kYbVbFtTy4n2bpRqmDctClDytCj5rNXp2pVKgQYpFZocLQqjx2onBVrj+x7SdQu0
      KHNZAfPUMZ7ngp5+Ide+j0YjpY8u0v3rXLmq76RRJfyOrpkWJZvo5Zkf/Jj+VIpLF4b45K/8
      4vQXQ7B1z34qQ5I33rmAHYqSSgJG+PqlRckl7U1LjWIYKAGGclHkaFHGHCsNgQtYlo0ZCiFz
      tChCzE6LogwDLQS2HRpHtTLpOMvCQ2CaFnaR7l9aVtBvobFK+B3NhRZlRgGQXpaR4SRmZQX1
      dRYNdZWTjjnx9ut0DjmoUJQ6Mcw7nXH27t+PP3iJo+f7uemm65u/XnspnFf/N0bjVqwt7x0n
      3NrLZ4PO11icg34tV6KNVHzMKAAV9ev41Gc/i5dJcPTIIS6c66Rh94Zxx+y8+W52Fv5ro21T
      7s/Vm7nrKp1Gy8kNqnqP4595BhGrx2y7CVExhgvmKg1FPZf6AeVdVdtFgfIX0Fu1uJhTvoEd
      reKm29+10H0Zh1IXAO07oCVGw1ZE70nM5p2I2GQbadJ5Wi9/6vfraEf7ki2IKf1coMAVKCK1
      GBWNGDVrELPs1uKd+j7Z7//fyMELi9THBcYcdrMsdZT6KLt+IB3cN/8GPXwJs3EbZv3Gpe7R
      NUNfB/sZl+QKsLwwi6qWswO0VtjbP4iI1mNtuX8R+rVwuJ6K9ktWAJbNQ57NYB3zvVG7Lkgg
      C1cvcKcWGHnv1nWAkhSA5UaLouU8PDJazdk7pLVGe9n5tb+oWCaT1AwoSQFYdqwQ0lsQlgad
      7CH9+GfIPvXvSlMIroOVoGSN4GXnKlyA3Bid7EX1nUIne3M7yUyRIasV2g++W3bPrARQkivA
      iofy0crHaN2NuXo/9g2PTslAjVZknvw8yb+8D9V9ZPH6twA8R0uFsgAsNbScnNagFWgVxBUM
      A4zpF2qd6AY3GdTpLhLmFKleJihJAVgOG2RcK3R+FtWz1wDo6fJ+hIG9+2OI2rWYbTcVt4Nz
      wLT9KgForfBe+TO8N/9mxsKdkrUBSn1/gPlgIo26vPgi/vlnMTdNiAdIb+ocm5nyfgwTgRHs
      NLPYKEXDPA+t8N78GxAGoT0fQ8QapjysJAVgOWyQkUcuzDWlWlDIBp0wqN3Dj6F63kFnJmxa
      MSHHRit/5qzP5RIrWQoIA6NxGyJSg4hMz2ayPEZZKUO6Ae/OVINxys8U9g2PghXB2v7wzG3r
      6QOCWskcNeISxEuWhREsEJXNiMpmEAu2TWoZ84FWHlp6GFWtCCuCiF3DNprzZWQoYvr08jCC
      NdpJ5p7T9CtlSQrAsjSCpYt3+gf4lw6MGrjk1SBdOKbYmJshqhfm2m6q6G0WFdINAogzaIol
      KQCw/IxgNXyJ7FP/lsz3/nUQuJoFOufqnFvjM6g50ptfWysJfhbcJDMlLJaN4CJBRGow6jaA
      FUZEZk520zLH/zNd9FgT2A95x85saRbKQyu1iJuxLgPjO5dHRVgu7ArgZhJ09Q0BkEkMcOrM
      RXytSY/0cfpcO/4yeFbFgLCjGI3bMFt2Bxtgz4TZ3IfKW9qSx9lQTI6hhYTyctm4C2gD9PZ0
      0tnZi1aSEyfOEDXiHDt5meOnLmLJOGcu9lzrJa5baH+ZDKRlCu2lgxjMDO7ia1aB1mzYROLE
      JbRShKtqWbd5O8OvvUCkcTPrV9dxor0LpZrmxQskpcRxnKLSIxadF8hzcmnbKlfEr0FphBq9
      Tv5eVZ4fyA90eV/6gEb6wW/P85GuixrDC+R5Higj1/bkvgdtaqSSaA1eahA90I7RuHVc0lzA
      CwTSLx4vkMxVgslsonS5m7QEP4uWfsCdNM2wK5oNIAxBNpkkNXwFL9KKGh4kUa3QRmTevEC+
      7+N5XknzAmmVxtUKE4XSEsMQoLIIo7pwHWkYKAKDXgkwLRMfsEwLnyDl2wds2yrwAnliDDeq
      GcITAsOYzD0kDQMpBKZhorRCPveHyK4jRB76L9jb3184LuAFAtMqHi+Qa1r4gGkYJfuOtPJx
      lERIB9u2ENbU7V6zAJx4+3W6R1xUKMrWDS0cPjXALbfsJd3Xzon2YfbftGfebS6reoB89FZr
      Zi2PDE6Y8DOHM2Z0N+ogDcKKzGxYFxPLyOOkvfTCqkDjeYHgrqa1AIRaN3Bn67W2vnygvQzC
      Ds9+YJ4BWnrz2Lll+heovTRIF3vbw6j+M5jr7pxjm1cP7S+jQhjfmVEAlpevsYTQndD8fv9P
      8+WL60qifll76dwKsHipEXqWijDtZ0l/5zfIfO/zaCexSL2a2ImZOYxKMg6wHJjhznbFOZeu
      we9WfLRKEp3p4Ku9Fz0PlaYghIspjLOkccc7kZcOBH9nhhHhpdljWnvpqQuKKFEBgNJnhtu/
      oZq6mMldu1oJ90x+jFrrIBKpPLhad6fWVz2jB9efPoCmlY937AmMymasje++yv7l8oKs8JSk
      YEb9Jqz1d6Glh6huu7prFAMzxF1KUgVaDsxw0ZDAMgQV0zotdLD8XkXOvM7nsMz/xILAeEe/
      ReqvH8A9/LUpD1V9p3B+9Adk/vm3538tP3BV+hdfJPlX9+O++r+mPVREakAIhDGzU0NLF53s
      WRB1cib1qyQFYCmhtUKlB+Z/4hxm+XeGqvh68l0MO/N77NqbW+ZnkBMUCIAaOIvOjqD6Tkw5
      qIzqNkRla8BpOs/N7nROLdOpfnASyN4T0x/rZ2ZV47TWuG/8Le7XP433ztfn1ZeZIQBjxuuX
      BWACsj/4XVJ/+wH8Cy/O7XiP0YS0mSA9vnIww3eSd/DSmXigGk2YeQs5QhMxRdvazVOv61xt
      wHghsXd9BCI1we+p6NlDlRjVbZitN+aaUThv/A3OgS9Oams6mC27IVyDvfvj0x+kFPhOQWim
      hkbHOyA9gM4Mzenac4IVATsy+qymQEkKQH5njyW5tpMCP1PcFwGgfO7ZXk/Y1Gxfk2eRnniP
      87nn3LFeOhf1nKjv60Jx/dSnq3HxBZ0ewD3wRdwDX0T1n5l7D7RCWDO7f7WWM7oihTCwdnwQ
      AGtDEVnIrXAgBDOsziUpAMCSMcOZbfsQkRqsTffNeJyrLdRUj2+GvPtV1QYxw6N5aofEtUN6
      o/q8mqZKbSy0LBwvosH+Bkb95iCrdS7QCvQcvFTSm3oVmngMk+unrwlGEE2fSQUqSUtzKSPB
      Ab2ImJGKJICYcr6eqUBFaQMtnQUOJOWqlKcr0ywcpgIPTl4ADBOjbj3KtGd3V+ZXG63m5qWa
      Q+lmYeAXq8hGKbCjIMzlpwLB0jHD6UTXvI7PerkXK71Z6cJdXULzzSxu0hmRn1H9zJy8XFrJ
      WdMn8p4a7cSvrk8T2/MzEKoEw5qxhLNkBWCpoNP9U37uX36N5Jc+gnfs2+Psk8Lf0g1+tEZ2
      HUa2v1qYgS+7dbzlbMWVILWBnmFXxykxYVZUSvN/eu7mDzs/wEh2zPXH7t/rZ0BLjvcJfq/v
      U/zgSu3EO51smPrzy8TUs+TaFzCdcT/FtXW2OAKAdIPgl2HNWD9dQlPSeCyVEaySfVN+Ljve
      Rg+ewz/3LNbOj0x7vnZGSD/x6+ClMaqDTdL++PhmerO7uO18HIWBztduXUPi2lu9UZIZk0t9
      F9ghvUCFmFhIoxXH2gc57zRRe8XnQ+M6OnkF0PMtwsnNrLPq7dJFazlzxVrOUC1ayoT0A/3f
      MGcsLirJFWCp6NG1VujU1AJg7/gQIAKeTsMozHt6Yv6NGcKoaAz4aKpaANiozxIxFaubxuvW
      esIWQxpBSkXwFTPOmIYhuG19mLa6CJvbapmScj23h9kdO1qIhQzes32C5a1V4O3yrkLnzqsz
      BYN7+r4WcpRmmdAKKlDmKmIwU7XnJoMVwI4tTxtgSYxgJzEt5XdhA7zc5haetlDaCIpaxui3
      wo5hrt6P0bwDEQq2ld1pX6LBTlNbXYWaxngGOJ6o53eHPsvXEvdNiitkXR/XGx1oHiFMy8KY
      tjUNGizLxDAMakLBuVprVKpvjAt0zPlz9MDkdeo5MVJoPX18Y+xhuWsXi3JFu2nIq0DL0Qu0
      FEZw3vcflNHNLRdp7KAsYIolV2oDEPjanNp9Cgw6FgOqhvN+BKlNDILI7kgqy3/+Xz/EMAT/
      7XPvJRq2GXQMsp5CelkKU4XyR92JuYHkK5BjxrjqPU7mO78xNVXgfPOO5qoySXd2N2he9UkX
      Kf6iPDBshBVBu9OrVSUpAEuFgv4/03I9jeckUIU8BAR8/RNPw5zRXFQjV9jV/kVqjW3cFLqI
      JfzAlad8PE/TP5IiZFukMh7RsM1I0sHzFVrl3J4TVZmcAAelqGOM9uwwOjOEdpMz9GaOmGsO
      0SwrgNZ6dAUoVhzAyyDsCIRiU76PPEpWBVoK6ETn7AdNu5yq8WnPen4v0zv5JO75F9AI0np8
      ZLUuCjdsaGbjqloaawPGiXjKIev6SDWNWKlANfOdDHJMv8xVezFq12FtuCf4YIzrdiEZ32Zu
      O2eQW5GiReC1n0XY0SAWMEMuVUkKwFIxw6lUH0zwVWgvjex+Z/ILVH6QODfVaiFdQE9aSTKu
      j8RE+Tk1xU0XVHBr47txrRqkNhhRlVP2L+MEzySd9ci4Xk4AVG7n9mCQ57dqys96SumgaD4f
      g1AKrfxRw3CsHq9VUEg+g86s9RQsc3NRF2dLiPOz6GgD2k0VZzso6QZeICsyI/tGUQVgsOsi
      b731Fl0DKZKD3bxz/CzeVab1LwUxls4MIaLj/eXum39H+qufwn3tL8Z97klQGhx3ihc7QTeW
      2sgZzQKFgSoEkrJBOkI2jk70oA0bjSChpi6vSWeDdtOOV5At15Pjc34mDDRPSqRSyIKloEdL
      Mq8Kk+MHc6F3mfEYrTmSbOGPu9/HKbetOJxIXgasSJDpOkOAsnijTCu6uwbZsG0b9RWaE+c6
      qY9JTl+YX2QVlo4ZTse7EBXN4z80Q4AOGBowC7NT4Muf2lCfuCi4WKO+/7HIuQfdQ18h873f
      xMumkRgMq6pxbSutcTzJwEgwaw/GM4WVx5nKCAfI2QRZZ8JgVX7O/TnZ2zVbieM1YQZXJGhe
      Sm7lSHoNr6a2BqS214i8CiTs2Iz3VVQjOOvEeeftt9myeTPR+mZaW+sYau9CKTUvXiClFJ7n
      LTrnjEz0ICpbYbg94OURLmz9AM6rf8WF8K18eRjuvRjhwfUunu+h0SjpoZWPUEFaspJ+MPsY
      5jjVQAMyZwhKz831KSdMFS2gwdMmShtktU0i7RCN2YXMWKUUri9JprMMDA4htMREk8wEKo/K
      e318H+W6BQ6i4J7DSN/HdV206wYpG7ktlZQcfc5aBUZ1cO/TZZHqguFdeG7+9M9W5WZf382i
      pnv+yudWXudF7uFctpFkOkskNNO+CHJGynMAP5uEylVoM4z20tP2r2gCoDWs2byTqggcOtmB
      aRgMxVwwo/PmBZJSIqVcVM4ZLV1cJ47ZtA2FwHQGUFde5UB8LV/u/wXsFwfp8NbS2AsfsGxs
      y0cgAq++VoEHSDoYhoEWIrdjy+gqpjDwcpOxp4L7V2eeBjSh9beTPfc0yjVQCJxMmtQ/fZ5Q
      6/rAq5QZwU10oQmRdRWZTAZLe0SEh+sEAmCgUICpXexQCEc5gMZzs0AY07IIhUIox8CVLuSC
      cEKOPhdPCIQRcBKJMcmAauQKfvurAd9QKIZvjH9/pjWZtygPXzpIwNT+tLxEWkJEJjCRdGdC
      PH8mw4fumnrXS5XqJ/vU7yCidUQe/MNpaSg1CuwwSsZQvjNt/4pHjCUEwk1w6EKcvfv34Q91
      cLojwd4bN827raWIBGsnGbjOYg2gFc6zX0Befo2DqQ/TK2/ktsZqOob6uWdHfUCClYOXm2lH
      MyNzAsH4GcrXZsEfX1CH8q7LXD2tRxAjyPqQHuqiWvaDMFFeBicVB91IMusy4lrUmClMFMlU
      EsYWdOX1r9xvz58wk+c25ZuKa0i7KURo/IDSSpH90R8Exe1uAvvmnxs1MOdBuT5jxFlrXM8l
      ZmkejTzLN5+v4q49a2monjy4dbwD2XkIEapEZxPT87Dm+ijM0IwBu+Ip2kLQtGYLd95+MzHL
      oLppLbfs24Vdkn6mKeAm0X4Go2EzSAezdQ8Ig/e9az8mkvffshYBhEWgtnhSIbXC9yY8XKXm
      z8Wfy93PB8myOkRWh7G2PYQIV0CoAl2zFo0mnfWIpx0ajDg2ElcGwiT7To9rMm+oOt4EA1B6
      BW/PXCAMI6j8siKYq/bl+iuDTMv53uMMkJ6HGY5xd+QY9X4n//jkqzhv/DWy59i444yWGzBq
      12HUb0RUTL3vF+RtgEhQEKPVtBuZl+TwXIp6gMIKUNEEgLnmFjBtKtbsQaAxw8FMk/e7Kx2k
      GqjB8zCHFF4903ZH0gM0WR0iIhwEmowKI3JpF1oLpDLQGoaTWeIph1ojSUh4pFUkOCbeETSW
      F76cipOPVBcWBjkmlz8HlR6YMQvTaNwWsF/Xj1nNx7JAzGjg5jDBF6/9LCrVH+RfuSnSyiYW
      CROLhPjk/ipeO9nDsWe/jvPifx93njAs0AqV7J2xdkA7CQhV5orxNdO5aktSAJYCOjscsBfk
      uP2D7EpF1vXQiNwPZHUIlR5ADV/JnZiLxDpxVGrqjTFcbeP6krQTrB6TZuUcpDaxkNQYKQZV
      1Wh0FI2fcx4MHH6SoUvHqDMShIU3KWimRq4EeUT5FcAJBCJLTgeeOBCT3aT/4eOkv/7z6GnI
      AGYP6M2euTvWE6OlS/aH/4H0l38iUK38LFkdIhwyEdF6blob4dbdm3gsdT9uxZrx7SiJzo6g
      E92o9OD0F1QyyAOyI8E7mmZVLgtADjo9MD4/JpfakHVcJGYulwccHzLf+CWy//SbaDeJn9f1
      fSeYkbQaM2Byq8UEF+hg0mOqAK6LRVh41BhJ4ipWSB9Q2QR+Jpihhy8cZHBomAYzTkh4OHo8
      o4P72l/gH/9uYcmXE2bniYNZSw/tJFDxzukLZHIq2qj/XzOdC3g6jHNFao1O9aOzQ8Fg9jL4
      2sQ2DUQoCl6GT9zeQoffxCvnUuMTA710Ie1EJ7unv6AfpEIIKxrEWpaTCrQUzHBqpGNyDIBR
      1SGTDpZbv+sIavhS8EC1xtMTVbXgBNl9FNV7fMpr/fmbIS74k4miPG0REh6VIkNCx8jX7Gol
      8V0HG48hVYWrLSpElpDwcCcIQGDgjvrRMxMDdRMCUiJaj7XuDszWPYjwNHq9lx5dVfKllPaM
      XHiTMcYGEFYYa8sDYEYwGragnQRpHSYWsTGitejMMC3yMh+KvcxjPbsY6jhXOFfno+xmCNV7
      atrLaTcTGMhWeMYVoGST4RZbAHRmCKOyqfC/e+D/AJBN5TIJcy8wfeUISBdlhtFT1A3LzsNB
      WZ90JykGUo6/p4kmgaNtIsKlxkgxrCpzjA8KEEgM6owEg6qarA5TJVLEhDNJBQICfT4fFxhz
      TZ3fNmiq+8+OjGeJ0BrvyOP47S9jVDRNPsGamwDosVHvsZBekHYR7wArgsLENAyEHc2pk33c
      3zrAK8P1fOvtIX5ptUYIgc7GEcJENGxB9h6bfME8lBeoQHkjeDmpQIvNDKe1QssfGpIAABov
      SURBVCe7gyBYbmlXAwE1iJ8L5Lh5d+fG94AVyZU2TtFWun/a2SY5GCzZGsFqs4+D7hb+aOTT
      vNUpQClcbRPCo8LIkFTR0UxPAjdqvZmgT9aS0SEacyrQpBUA8I48juw5CoCT26NK9Z8m/fjP
      4b71pdEDzVDA2SPdwAYa66nxHbzDX0Ge+zH+uWcn38wUVIiFZ6AUfvurgWdqQm5S4RgnAWjU
      0EW0kyCjQ0RCFiLWGKSGJPuorKnnF26L8MxbFzjRnitVzQmSuWovavjSaHsT2/ezo6kQWk+b
      DlGSArDo0AqdHUFE6yZ95WSDF5ifSV2rJii0lg5ayzE5NrPD7Q1clRpBn6rliLuFE94GDlzM
      oNE42ISFR52RZERVovI2AAIPi0ZjhB5Zh6NDVBnp3AoQmXw76X70SGCk5wVEdh1Bdb6N6j5S
      OE6Eq3KJdB46PTguZVnYEaytDyJijZirb5r58WWG8E5/P7AjCFjpMk/8Gplvfw6dHQkS0nI5
      +X7H23hnf1SoAFMD50D5uNomHDIxIlVoLxlMSJFadq+rZac4wWM/PoZUKpfEpzHb9qEGLwQc
      p2eeJv34z+Kd/sFop7xcNqgVCdS35bQCLDqUj0r2YdSsnuKrYMbxc9mUTsehgosRxmRZ5o/X
      gqPuBo65GworRHaCmiIxeCpzO/dEjhDC5fbtq3guu48Ov4mI4VJrJIirGCpfKJ7zQlUaGTxs
      LOETES5h4eFMxTRhxxAVTUHZb85GMVfdCNG6cUIeVKzpYFDlN5QeQ6ciwtXBdkt53T+vxkhv
      3DZM/rlnyT7528EWsUoiKpuC2beyKdDBDQukj0r2kn3qd8g+9W+Rlw8AAjV8GZ2Nk1ZhomEb
      7Bj4DirZi6hqhfQAH6t4nvPnz/PCofbctqdgNG1HmCHU4AXklTdQPcfwz/wwWM3HMNEJK8xM
      HK2LbgMErGOjuoNRuzbwCOTTjc0QUmkkEZThTvJPi1AlIhSd7Le2wkF0cKwrzzARZjgojXPi
      aDnhdiPVQQDMy6Kzw8GA0GpclNPLJLEBJxv0z+k6DpXTZysOq0r+dOQn8TH5w7q/Zp3VV7jb
      UXVFcMFbhRWVGELzzOkUbw69F4A7w0epNZKM6AqUk8BUiqwOYeNTG9GQgVguVhAW7pQrAEIE
      fDgI/NwcJ3UucSMzxnVoWEFkeIwqp7Uf2C/Kz20yLXO2QZBFqrMjgUCExtgAdhSEQPWexHnu
      C1jbHsao34RRsyZQJf0o2sugnTjaSSIitRCuRlS1oJLdqHgnCgPTEIhoXfBu1QDGujuwtjzA
      5luP8eDLb/DYs83svtchaoUDwoFQRW5TkDvwDn0Vv/1VvCOPY217aNTvb0UAPa0NIPQi0i/4
      vo/zjx8bp2tGHv4jvGNPIC+/DuSsfK0I3/nrqHQ/3uHHxrVhbX8/ZttNOM/9v+M+N1t3E7rj
      18g88eujHwqBiDUQ/cAfk/7e5yE7Mu6c6KP/G/eVP0P2HEcnuhGVzSAMdKKb/KhImzUkXIPK
      qM0TgwGP5s9U/ghPmwyoaiwUYeFSKTIIEaQ+X/Gb0ECTOYyHha9NkipKRLhkdQgfk1PeOt4b
      fZN2v5WIbZD2guu1ey3cGz3CRb+FbaFOBBpPGfxF4hHeX3WIlCsICZ/t9iVGVCUvO7v5UOzA
      +AdtWDk+nCynvLXEVQUbG0yaUscDIlosQvhBzEPntljKBfNEtB5Rs6YwIaihi4hILTrVh9Fy
      A3rkciAElS2QC76JaB3adzAqmlDD7YjqNoSVC9BlRwLVygph1G9CXnoNUbMGYdrBTJ3sRTRt
      509O7+LObfW8u74TeelVtJfF2nQv4Xv+L2THWww988d8deA2bm8cZrc4TuQjf072yd9ChCox
      227CO/FdskYF7Zlqtt37kxiH/p7Qe/49aHC+/ztEPvgnGJWtuXdLMCmyBCtA7DNPTEpyMlft
      Hfe/lJJsNktFRQXh235lUhtaSayJWwEZJpghKj7znTEH+mjpIyI1hB75cyxzvMYnItVE3veH
      yM6DZL7/74h84L+BdAMhys0YByoe5Xu9lXxw2zpe6epip92Orw26ZT1/mXgEX5tkdJjfrP4G
      G+1uTKE45G7hoLsFH4tuWc8asw/QtJhD9Mg6QLDNvsyQrOJ76Tt5MPoGP8jchqctdtjtpFSY
      f07fQYvxFGkd5pupe+mRdcjK1fy4sxUTxSpzgCFVxdvONoZUFVkdxtcmt1de4GbzJBgWCsFJ
      bz1dsoGerE1/Yi0awVvuNu4OH+VTjZch2Y0wrFGWi8xgsEoYFlS15tSHoEjmxcsWl7N72W5f
      4qaq0VVQZ4Yw192J2XoD3oknMeo3ofrPTvLTy1Q/5uqbA91dCETNWnR2hJ6+QTr8Robaj6DC
      OWYOIQLPlBNHpwepbN3CzzhP8058I/3VDbR1vwPSRQ6co7+vh4v++tzEsp70sXPclOrDP/JY
      jr9UQzaOTPXhn30m6HPO41WybtCZIAwTQtMkQU34vCBqkVqMqTICzRAYFiJUhVG3sbBKDMlK
      qo0Up+IV9Ko6hmQlI6qSt5ztPGbczx3h41zxm/Fyj/AfUu/jt6of4+nMrbzk7KFLNhYucdYP
      opmDqppBVQNAozlCVoc47m1gl32RI+5mJCab7E40grPearpkPRVGlkPuVizhE6tfzVsXt2Ig
      +RQ/IqkjnPHXcNpfR4sxyLCu4L6KPnAB6aAweNvdynl/NWaPRurRiedFZx+faogissNktY3Q
      FiOqgpjI4mqbOlsHM3Z2JPD4aM3R9CpedPbyurODk7E0H1Zfo8LIeWXW3k74ts+ifS8wwKcq
      gDGsnE1ggF2BteUBTmab+NLFDfSqep42PsBP3L0F59IrYIYJ3/OvMRu3YTZuw979MZy//RDP
      x/fx48rd/JvtH6RdbuLHrx7mYK+NaZpsaGvg9KV+eto72VkTpf7RwJWd+esHwI4QuuFRQjd+
      stAdLf3lKQDFhk71IcKVCDvKK28c5smBT3DCW88t4ZMcd4Ol3Ok5DVThYdEvaya10S3redPd
      zhPpe/CYmm/fH2OwplQEDwutBUkdQ+Z0dRNZKLY56m3CQuJiERVZ3j4f6O83h05Tb8QZVNWY
      KCqMNJ+oeJYvJR+m2UpCVga6O9aoF0iPX3VTKsx3Otq4M2Pxe0M/T9aVSAwsJJaQ/IfaL7G+
      +2ig9/suCkFKR7jBPs8Vv5knu+tpqNzNw2tHUIMXCiumUbMa7+KLwbZEsQZQPkbTDuTl17C2
      vg/ZeRCV7GdIOTz5Wprnu29hv3WMn9vv0HLfr2KkcnsNGNa46jwRihG75dO8/5lv8l87N/PZ
      //pdwiGTnet284v3rObOdSASHVz+9v/gj1K/wt8nH+bz+ZNDFeCmgzhIohvv+BPI1CCp+EDp
      CsBiMsOpeGfgErTCfOuox1lvIwBh4bLJ6uSIt4WDg4HHBAT3Rg5NamNEVfF3iQ8UVoSpENcV
      4/7O5OyBYVVBfq0KC49j7gbiuoLvpe/MZZ8KDDTSDWZVD4tBVU1KRRBoYrmosI9Jn6qjx9vA
      KtFDWHjjvFQxkSGjw2gMVpn9fONiE4ejj5B0BXllwMNAaoML/iq8eB8YMVrNYXr8Vk57a3ko
      +gaN5gjPZ29is9VJ8sbfYtANoWo3o873IDOthAey1GiLK249aIVZvwXf7aYqtIc1u7bx7HPP
      853UXSSTDdzffIUdqROsr7mDCwMpzh96Bd/ZgqCSyKUM29Zn6RlMMZTI4Pr7OK8OoxHUVkX4
      6Qd2E7IDL9frXaD6HGp0JT9V8xJf7HkXTx44Q9i28FI7udGJEj/XwcXv/TG9SZ9zXhv9avPi
      G8Ff+Mor46K8n3loL68cvcLZjlHvjdbwvv0bGU65vPzOpXFt3LKjjQ2ttXzjufFpBmuaq/nQ
      ndv4n994bdznVbEQv/7RW/mzb7xGekx5oOtLfvun7uLxZ49x/txZUB5G1Sr6h9OF9IFKkQ7Y
      2vT4qGe1SGIIHURrZ8yJmS5nRhPGIyQ8EjpGGA8nl6z26YofcsFfxQFnV2FVAEGTMcT+8Cle
      zO7FFj42PgqDQVWNgSIqHJI6SkhIpBbcELrAT1X8mP9n6LMFHqKYyCIxcHSIapEio0MojCli
      GZoWcxCbYFX4dOXTvO1s5SXnRhrDDoOOTUZHuCd8mBs2NvPU0A4MIYLBKF02jTzH3fZB/j75
      MCDQsSbiyTQZu5Gmukr6e3toMfoJhWwMITDcOJ97dz3fGNhH/+AQsvtIQDDWspvPPLSXA8c7
      ONs5iC00su8kwjB570PvJ+N4vHrsymiv3RQ7+77JOqOTJzN3cMjdVviuMmIjfRdbZ2kUQ6yq
      Fpir9i7+CvDgLZvGRVDrq6Ps37aKzW2j/mkpJS21YTatrmdV4/j8lIaqKDWVET7+nl3jPq+O
      hWmuq+AXPzg+aGMZguqKMD91/67AUM4hZBk01cb46Qd2MyyfCHZL2fco/+PxV8kMBL7mpI5R
      YyQmJTv+RMULHHU38aa7fcZ7Dbw+k1MV8p87OoSBot6M0yPrURiEhcsvVD3FaquPJ9N3EhEO
      Q6oageYD0df4SOxlAEzTYNCL8h+Hf4FGY5j3RA/yzdS7qTWSdMgm9oXO0mQMUykyhZXnM1VP
      0+PX8O30u/k3dd/gYMWD/POVemQuVmAgqTbSpFWYz1U/yXFnLce99TQYIwypKu5tGeaX76rk
      2z94kW+k7uM1ZxddVxweed82Hrx1M1prOjq6uPjNrxNyfT4ce4VLsoXT4WYGkjYpx0eMpPnP
      H26i8Y0vYu/4IKDxjnydUMWv8S/etR/LGSL1D/8Fs2kHsY//KwC2rh1NUlSZfQhhBHuPAQ/s
      H03Rln0nSX/tEPhZttmX+bn+f48hBPurO1jvnWJ7TR+b9t9P+OhXEWaY2Ic+sfgCcNvO1ZO8
      QDUV433ZY71Aqxqm5qq/eeuqKT+/YcMUeSvA1jX1U5bFrW6yqTU7SFdt4IvPHKVncHyO+Yia
      fH0TxQlvPbNlRDp6/PU2Wx0oBBf9oO91RpwhVUWXbKRSpEnqGGHhEREuu+yLfJe7yeowUeFg
      CUlEuMSMfD4/POfuJqNDGELzrvARbgmdJCpcfnfolwnhocbEAWx8Vlf6ZFLB6lZhONxxyz6e
      7O4nX6u5zb7Cv6z+Jv9x6Oc5p9bxnLufPr+Kv0w8whW/md/Y2QChBA9G3+C2yCn+KXMPzyT3
      8cxbF3jw1s34UvGn33mHcz0PERNZBJo2q5+t+k3ur7xCV/VtbL//Z9mwrQW982ZEpAb/7DNB
      ztG557D3/EwudmNjTLOrpDFFtD4PYccKk5whBJ956EZiYZt3dz2Puvgy5vq7iN7xs6Q7Xwoi
      0WaodG2AxYKWHkMjCb7WY/BWz9wYLL6cfBCX0cEtUFjIScbvRCaIiHDwsKg1EiRUjAYjzrCq
      QgPrrW6OeZtwQ8ELdnQIR9vo3ACuJ44xtlDdrqDFHCJE4I40hKI+5GNUr2FTuo+vpN7Hm+4O
      sjkhtHNepMrsICaSkEqTOf190LcU2ErrjTg1RppWc5An4rcFhUBIOvwmXGwGI5swG7PYtW20
      bn6An9n9S/R++xBGbkLrG07T2Z+k2Yrzi/XPs7MmhTF8LsiyNW3C79qLvS0Y2KKqdfS3MDFq
      1gbR5fyGHZWTM3NnhRkq5CgJIXj0nmCFdv4p+NqoXY+I1BD75JdB+Qg7ulACoDh75E0u9iXZ
      fcvdtNbMvIfUbJA9R5Fdh7F3PIKIVAepyMoPqrJ8B4EqsCEDQcZjgeQpGDQqm8A3zYDQSroB
      V4/n8mJPDd/peoRodT2NNTb9I7NXN40d/BBEZitEhl5VP+5zk/G5Qqe8dYSExypzkNVmP72q
      tqBdXfIDJumXzPu5T79EkzmEgcYozOQBY0RepsyWG9jvvc4O+xIjOlATjZq1RB78T3T8xauk
      dYRD7tbCtbPaZji8jvMZjcKgXbawrbmVtX0hhvsHGVA1nPHWMEQtHbKJpI7xy/scvnZUkvZN
      7rtpA+/dvxEjGqLiU4/hiRAN4Sg/df9uvvCPL/H8oYv88M3z7FzfyK+0nqHy4hXMplvwh89h
      tu0l/MDvTTl7q94TgMZcd0fgJnWcQAiM+e1cCUHagxBGkKU7Zt8yEa1DVDQTuvkzwf+mXUjl
      WBAB0E6ChN3Iu+/czunLHbRUbyzQe+QZ35RSk0hw858ppchmswGLge/iP/8nqI43cV74E0CA
      CNgT/mz4o5zzVvFA9O3CTJjrQe6XnvwZ4GuD15xd9MhawvYgH7QP8OD2VST2f54v/eAob56a
      A0ViDs3hDA/fsZ0vP98+6bu8ANj41BhJKo0Ml/xm2v0WLORolRbgYrPe6mKfcx5CkFJRNIKd
      djtXZBNdsoHj3gZuCQc58NqwgjJLBN1+PVf8ZrasugkvNcTN1lEsuRFfmzSbQxxxN9NsDrN5
      8yaeHNyOvjDCpejN3Lbvw/x+9i8Y8F/mf8Y/znqrm4YbP8Ce/t20dw+z94b1fOfYMRJU8ujd
      2whbAtd1McwYvuchPI+s45B2PP708QNEwxZ/+uvvo/qtHyHdBCqXkCfa9iOtSvwcNcnoO9c4
      3SdAK9zBSxi+j3/qh+jsCN65H2Ps/6Vxz3OqMZP34Qgh0J1HggCXYYOXxXWdIFjW8XZQgiks
      fNdFa13gnVqYFUAHzG7B0qgKgz/P9pAveDEMY9zNSCmDG8l97/s+UmrsbQ/hK4/QjT8Z1Owa
      FlIbXH6si5FsmsM1j2CbM+f1Ka0LS7XS0NM9jGEKfvsTN7LDakY17sIOhdi7pSUnAEEKmsbA
      QKIwC7/XNleTcXz6R1I8VHeG9+59Dyd7JSfb+4mnc3QjAqLRGG7a55HYy3ykrQOreTsHr1zE
      H77Cn8c/ylgboskY5g9q/w47WgNZGFKVaGC4ejf71Ek6U3G2PfAZzI4fIC+8AHYUbVcwrCpx
      RYjE6vdg3P6rYNl8cu3/x08MvIjWmrNeG4fdLVCzHr3hXn5plc/93Ql2rn0YFQ1jb7yHllQn
      X2iIo/suYq79ZT531834UqIvvULcDzw1ea6m/ODxfR8hBG0NFexc18ixi320NVZRW2HjxzuC
      5LdcurKSPtr3C0wfY+u9jVt/ldCWe/Ea9+D7PnbLHoyWPZhbH8TzvCnHx1jStHFtpvpzlXw+
      CAPPdSA7gkgPgFbI9CC+VY3WutCHhXGDasmxNw/QOZJhx747WdsYeCHmwwuUN4KBAh/l2O04
      tdb0DqXoH0mzdU0Ds7Gpe56HbY8uqx39CXyp2NRWVxAMCOp1T7T342dGqKuqoCepaDLjJKii
      3kxwKVPFjZtbMITg1IUr7GkxCDcGmZ/xtMP5jn6ElyJcWU9dVYTO/iS7KnoJV9QiataAm8Tv
      eJuzqWoSdivxlENVLMwa0UFLOI2s347Rcxhlxzhn7KChpoIGM4Ef7yLcdiN4GWTH20FKQaKL
      gYF+euzN7FpXh2kF96cS3cHgM0PIZB9nxXbq6+tZ1TC54qvA9ZmrDRD2qENCK5+O9guM6Cp2
      bWwZ997G8iw5ns+pSwOsbqyioSaGygyhek9iNG4JktXW3IIwZ+d4yrepfSegNJknRb6WHrL9
      ZYjUgptCrL0j+KLvRODmXrUXMaGOYdHjAFcjAMXAbMRY5TavvzanWnEmolwPUMaKRkkKwFLt
      EVbGykNJCkAZZSwWSlIAlnKn+DJWFkpSAMooY7Gw6KkQc9n6KL+fgOcVYaeQMW0Ws71ym6Xf
      Zt7BORPH1KIKwFy5fvKBimJzA42NA5TbvP7bVEqNC3pNhbIKVMaKxqIGwuaKsfkdxWyz2Jtv
      l9ss7TbnMo5KUgDKKGOxUHIqkFYex95+jXdOX5qSQvxqkE0McfDo9EzCV4PkYBevvPQi5ztn
      4KifFzQDned58YUXuNhdnM2i8xi4cppzHcPFaUwrzhx5g+eee46eRJEMVq0Z7LrASy++zHC2
      OKTIWqd57rnn+NFzB8jK6dssOQGId1zEbN1CyB1gJF2cB+x6EqGLG1mW2Oy/7VYGe67MfvAc
      UVHbwu233UTnpQtFa1Nm41wY6GGke/ZdbOYCrSRpUcF9991HS1VxDFatPM6293H7XbdTZRdH
      BRIixr3vupPmhhrsGVSgkhOAtAuNNRVUVlXiu8URgOr6RsJWcW+1qirKuZNn2bhl2+wHzwkC
      Q7u88cbbVNU1zWHPlTlAa9ovXGTNunW5NPQitCkEMtnLj3/0NJcG57bP2GxQ2mG4t4eXXniW
      810js58wJ2hG+rqpbGzBNJaRANTVhDl98jSXuwaIxKbgvbwKjAx0093dzZWufoq0wHLqyCFU
      OEI2nSrOYEUxODDCqtVriPf3FaefWuFLn/PHT3Kp4wpuERrVWlJd18qathoSw7PvED8XGEaM
      lrYm1q5pJZOcYTfJeUBr6OwdZk1L/YzHlaARrBns7UaHq6mvqZjnRjxTIz7Yy1Aigx2upLW1
      oQhSrxkZ6GU4mSUUraK1ub4I/dSk40P0Dyepa2ylKla8tGCtPTJpTazi2tvUWhMf7CXuCFav
      ahpXS3ENreKk4vQOpWlta8WeYcaeTz8zmQyx2DQMgjmUoACUUcbioeRUoDLKWEyUBaCMFY2y
      AJSxolEWgDJWNMoCUMaywzPPPVO0tlY8NWIZyw/Hjh/jtt07OXXmPFm7gdv3rOaVFw+wZtet
      qN6TdHtV3LGzhQNvHqGiuoaRtODu23fy5suvULN+DzdsbCm0VRaAMpYl+i8cpV+vxTl6gG+d
      C3Hj3Q9Tlz3Hkx2wM3SGg2+107qmjdeO9rHKvcA/f/cCZzr7MA9fYv1v/CKVuRKBsgCUsUxh
      UFVVDbZFrK6Kk0cOYqxvwBs4y3nhsmdnG5UVMWKVFVRkQqhoPc0yxI4tmwiNibOVA2FlLDsk
      kgmiIRspbLSXxQ6HGR4cIlJVA04KR1vUVobRQuB6CkP7GHaY5PAQ2FFqqysLTIJlAShjRaPs
      BSpjReP/B0TkbLisNYaWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWY0lEQVR4nO3d+Xdc533f8fdzt1kwGOwbQQrcJO7UQlO7ZUuybMt2qiROGqftSeu4Oe05
      bVM7yYndn9rT4+YPcH/oD01/6HIcLbEdxUosihIl2aQkihJ3ihRBcQMIYIhlgJnBzNz16Q9D
      gqQMyCIxA4q839c5OCSBy+88c+/zuc/zzL0zUFprjRAxpJRSxs1uhBA3kwRAxJpV74JBEKC1
      ptEzK601Sqlbrnaj69/Kbb8Z9VWj1gC+72PbdiNKA+B5Ho7jNKS27/uYpolhNGaA9DwP27Yb
      cqCDIMAwjIa13fd9LMtqWCdt5HH9eH2llFr8CBC5HHr/fSamy/Svu5v1d3QtuqQQS2XxAVAO
      Wz/3EBeHz1AxGzd0CdEIix8nFYycPkHVaWOgr7MOTRJi6Sx+BPAKHDt5Fjs5hutt4a4VEgJx
      61h8AJwWvvz003VoihBLT64DiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMA
      iFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhY
      kwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMA
      iFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYkwCIWJMAiFiTAIhYsxpZXIceUf4cKpFF
      ZbrQhVF0UMVoG0AZv/7Q2i0SzVwAHQER2isvWDsKAgLrxpsfaoPTQR/BPLsgDEIM00ApdcP1
      r2abJkEYodEABEGAZVqgIB0FrDA90JqoUgGluLQZKC79Xdf+YdbOV1ZXF0EuV9vEtlGmiY4i
      iCIC18UwDJQyMJrSmO3tBKOjGJlm7GV9c23SUUSQyxHm86hEEiOZANPE6u5GGVfOi1prwvFx
      tO+DYeJevEiYTJBYswZ1af9Hs7MEExNYnZ0YTU1z/zcYHyecmsJatgyzufkT95HWmnBigmB2
      FnvFCpRpzv0sLJYIpyaxursxUqnfXGdyEl2pYPX1zbVxIYsOgI5Chj4aJLviTlqTVxqtvRLV
      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
      Py2tNZv7lvHW6AU29/RyZCLH3cv6aW5uRinFI6vW8PbYCHf39nF+ZprVnV2EUcSx4jRd6Qzv
      jAzz+Oq1ZLPZRR2HpZwCQR3WADoKGD57Grt1Gb3tmbnvX+8aIIwijubGOD01wcq2dkxVG1Yj
      5m+ejiLUp5jnfnw6c/l76qqAffwtn1GkMQ2FbZr4YW0RnLi0IG5NpehsyjBamKE1leLipUVp
      wrIwlUE2mWT78jtoSSR578IQJ8ZzGMpgWTbL/cvvYGhmmuO5MZa3tnHfsuXYH+uoGjgzNcE7
      58+hAcc0sQyD9d09rG7rYPfZ05R9j239K+jLtqC15vh4jpPj4/S3tLClq4eEbV/3GgAgiCKO
      jo1yJj/J6vYONvf0zS20I605MDLMsdwo/dlWHh5YhVKw9/w5pqtVtvb1sbKtY9Fvn13qNcCi
      A7CQ6w3A9Wrkjro8dN5IJ/o0PM/Dtu1rFr/1EgQBhmE0rO2Xp1SNaDssfQDkOoCINQmAiDUJ
      gIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCI
      NQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJ
      gIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCINQmAiDUJgIg1CYCI
      NQmAiDUJgIg1CYCINQmAiLVFB0BHIUOnPmTGDevRHiGW1KIDUC3PEJZmmXKjerRHiCV1wwEI
      3RInjn9A5LTT09WMqmerhFgiNxwAw3Lo7u7BNiKCICQMArTW9WybEA13wwFQpkN7Rwd+Mcfh
      8+OMnjjETFWmQeLWYi22QFNbH498vq8ebRFiySld53lLcGkqFEURhtG4V1kbWV/aHo/6juOo
      ugfgMt/3sW27EaUbXj8IAgzDaNiBCIIA0zRRqv4vHdzKbYel7TdKKdWwqDUyxY2ubxhGww4w
      0NDat3LbYen7TcNGACE+6xo6AghxK2hgADSDh95hxys7OTderFvVKPDY//brvLZzB2cnKnWr
      O0drhk7u5c29g/WvDRTHz7Pr1dc4dHKo7rWnhj/k1dd28ca7R+pc2eXoe/vYf+wj0BH797zK
      jp1vMFX26lJ9euwce15/g0kXJoYGef311/jl3kMEdXpVfWL4I3b/cjcFH7TWnDnwOns+uAA0
      NAAes1GWLz++namxCeo1z1Kmzb0PPMa9mwYIvfpfd/Bmp5gOHdINmetqhs8Nc8e6DQws66p7
      9eqsS//qtTQ59W57go333E3aicAbQ7Vv4fH7VjEyUZ8TW2vvAOsGugk1dCxfy6MPPUBHxqlb
      n+lcvoY1y9oJNbjFi8xGaWyzto8aOgVSSoFSUMdlhkJz4dxpCrqT1X3putW97Nj+d5maLnDu
      /Fkqdb+/T6MjTaVc5Oj+g7j1rm6aBNUyvusT1Ln2lQcBpYx6H9Y5YXmaE2cuMLBmLXYDeuf+
      ve9QmC1y9vQ5oA4Xwhbm4IST7Nw1xNqtD9TtXqHALXHo4EHSrZ1ocxurerN1qlyz4XOfxwtm
      OKancep+AAz6lvdy8MR5jFRb3Xe+0gG5kYtEVlN9780Kyrz39rucy01ipR/Dyx1g13mb+x5+
      uC7lx4dOsu/gUdSoSx95xqqK6ZLLQ/dtwTIX/0xGTx9j36FjpCYCHnzwcXTpInrcBORVIBFj
      8iqQiD0JgIg1CYCINQmAiDUJgIg1CcBnyFsv/ZSx6s1uRbw08DqAuF4TI8N0TI1ycvAY+RI8
      8eSjHN3zGtXMAKtbXI5+NMGjn7uTfQc/pEICx5th5bbHSRdO8+7xMZ54+iu0Jc2b/TRuKTIC
      fMZU8xcY8ZrpNUfY89pOpjLreXRTJ6/vG+Jzj2xn7+EP8LJrcc+d4Z57BnjznUO88LMXmZ0Y
      ZM+R4Zvd/FvO/wfQmEbokYf5cgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      bPOvAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
